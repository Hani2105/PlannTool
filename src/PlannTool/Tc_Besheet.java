/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool;

import static PlannTool.Tc_Betervezo.Besheets;
import static PlannTool.Tc_Betervezo.jComboBox1;

import static PlannTool.ablak.jTable1;
import static PlannTool.ablak.jTable2;
import static PlannTool.ablak.jTextField1;
import static PlannTool.ablak.model;
import static PlannTool.ablak.model1;

import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.ActionEvent;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import static PlannTool.Tc_Betervezo.Tervezotabbed;
import java.text.MessageFormat;
import java.util.concurrent.ExecutionException;
import javafx.scene.media.Media;
import javax.print.PrintService;
import javax.print.attribute.Attribute;
import javax.print.attribute.HashPrintRequestAttributeSet;

import javax.print.attribute.PrintRequestAttribute;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.print.attribute.standard.MediaSizeName;
import javax.print.attribute.standard.OrientationRequested;
import java.*;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import javax.print.PrintServiceLookup;
import javax.print.attribute.standard.MediaSize;

/**
 *
 * @author gabor_hanacsek
 */
public class Tc_Besheet extends javax.swing.JPanel {

    public List<String[]> partnumbers = new ArrayList<String[]>();
    public List<String> workstations = new ArrayList<String>();
    public List<String[][]> jobadat = new ArrayList<String[][]>();

//a tervtabla adatai tarolasara szolgalo tomb
    Tc_CellClass[][] tablaadat;

    public String adat;

    public Tc_Besheet(Tc_Betervezo b) throws SQLException, ClassNotFoundException {
        initComponents();

        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        new ExcelAdapter(jTable2);
        this.jTable2.getTableHeader().setDefaultRenderer(new Tc_TervTablaRenderer());
        this.jTable2.setDefaultRenderer(Object.class, new Tc_TervTooltipRenderer(this));

        //letiltjuk a terv mentése gombot ha a planner false
        if (ablak.planner == false) {

            jButton10.setEnabled(false);
            DeleteRow.setEnabled(false);
            Mernoki.setEnabled(false);
            Szinezo.setEnabled(false);

        } //letiltjuk a teny menteset ha planner van bent
        else {

            jButton11.setEnabled(false);
            DeleteRow.setEnabled(true);
            Mernoki.setEnabled(true);
            Szinezo.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPopupMenu1 = new javax.swing.JPopupMenu();
        Szinezo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        CellaAdatok = new javax.swing.JMenuItem();
        DeleteArea = new javax.swing.JMenuItem();
        MuveletekSorokkal = new javax.swing.JMenu();
        InsertRow = new javax.swing.JMenuItem();
        DeleteRow = new javax.swing.JMenuItem();
        SFDCmuveletek = new javax.swing.JMenu();
        SFDClekeres = new javax.swing.JMenuItem();
        SFDCall = new javax.swing.JMenuItem();
        Termekleker = new javax.swing.JMenuItem();
        kereses = new javax.swing.JMenuItem();
        pnkarbantarto = new javax.swing.JMenuItem();
        DataLoader = new javax.swing.JMenuItem();
        Mernoki = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();

        JPopupMenu1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JPopupMenu1FocusGained(evt);
            }
        });
        JPopupMenu1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                JPopupMenu1ComponentShown(evt);
            }
        });

        Szinezo.setText("Színező!");
        Szinezo.setToolTipText("Cellák színezése!");
        Szinezo.setEnabled(false);
        Szinezo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SzinezoActionPerformed(evt);
            }
        });
        Szinezo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SzinezoPropertyChange(evt);
            }
        });
        JPopupMenu1.add(Szinezo);
        JPopupMenu1.add(jSeparator1);

        CellaAdatok.setText("Elérhető PN / WS");
        CellaAdatok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CellaAdatokActionPerformed(evt);
            }
        });
        JPopupMenu1.add(CellaAdatok);

        DeleteArea.setText("Terület törlése");
        DeleteArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAreaActionPerformed(evt);
            }
        });
        JPopupMenu1.add(DeleteArea);

        MuveletekSorokkal.setText("Sor +/-");
        MuveletekSorokkal.setActionCommand("Sor + / -");
        MuveletekSorokkal.setAutoscrolls(true);

        InsertRow.setText("Sor beszúrása");
        InsertRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(InsertRow);

        DeleteRow.setText("Sor törlése");
        DeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(DeleteRow);

        JPopupMenu1.add(MuveletekSorokkal);

        SFDCmuveletek.setText("Műveletek az SFDC vel:");

        SFDClekeres.setText("SFDC lekérés");
        SFDClekeres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDClekeresActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDClekeres);

        SFDCall.setText("SFDC lekérése az összes cellára!");
        SFDCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDCallActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDCall);

        Termekleker.setText("Termék a szakban!");
        Termekleker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TermeklekerActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(Termekleker);

        JPopupMenu1.add(SFDCmuveletek);

        kereses.setText("Keresés a kijelölt cellára!");
        kereses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keresesActionPerformed(evt);
            }
        });
        JPopupMenu1.add(kereses);

        pnkarbantarto.setText("PN karbantartó");
        pnkarbantarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnkarbantartoActionPerformed(evt);
            }
        });
        JPopupMenu1.add(pnkarbantarto);

        DataLoader.setText("DataLoader");
        DataLoader.setToolTipText("A kijelölt sorok adatait grouppolja DataLoader formátumra!");
        DataLoader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataLoaderActionPerformed(evt);
            }
        });
        JPopupMenu1.add(DataLoader);

        Mernoki.setText("Mérnöki gyártás!");
        Mernoki.setToolTipText("Mérnöki gyártás!");
        Mernoki.setEnabled(false);
        Mernoki.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                MernokiComponentShown(evt);
            }
        });
        Mernoki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MernokiActionPerformed(evt);
            }
        });
        Mernoki.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MernokiPropertyChange(evt);
            }
        });
        JPopupMenu1.add(Mernoki);

        jCheckBoxMenuItem1.setText("Kalkulátor ablak");
        JPopupMenu1.add(jCheckBoxMenuItem1);

        setComponentPopupMenu(JPopupMenu1);
        setPreferredSize(new java.awt.Dimension(1800, 700));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(453, 453));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PartNumber", "Job", "WorkStation", "Terv/Tény"
            }
        ));
        jTable2.setCellSelectionEnabled(true);
        jTable2.setComponentPopupMenu(JPopupMenu1);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jTable2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable2PropertyChange(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(130);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc1.png"))); // NOI18N
        jButton1.setToolTipText("Ter/Tény színezése");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos1.png"))); // NOI18N
        jButton2.setToolTipText("Behúzós");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png"))); // NOI18N
        jButton4.setToolTipText("Kereső");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextField1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField1MouseExited(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look1.png"))); // NOI18N
        jButton6.setToolTipText("Nézetváltás (PN / JOB szerint)");
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email1.png"))); // NOI18N
        jButton7.setToolTipText("Műszakjelentés küldése");
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nincs elküldve!");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan1.png"))); // NOI18N
        jButton8.setToolTipText("Terv lekérése!");
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton8MouseExited(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save1.png"))); // NOI18N
        jButton10.setToolTipText("Terv mentése!");
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerifyInputWhenFocusTarget(false);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton10MouseExited(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload1.png"))); // NOI18N
        jButton11.setToolTipText("Tény mentése!");
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton11MouseExited(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nincs mentve!");

        jLabel3.setText("Nincs mentve!");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz1.png"))); // NOI18N
        jButton5.setToolTipText("Oszlop szélesség állítás!");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/calc2.png"))); // NOI18N
        jButton9.setToolTipText("Kalkulátor sor/össz!");
        jButton9.setBorderPainted(false);
        jButton9.setContentAreaFilled(false);
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton9MouseExited(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel4.setText("Calc: Időpontig");
        jLabel4.setMaximumSize(new java.awt.Dimension(67, 15));
        jLabel4.setMinimumSize(new java.awt.Dimension(67, 15));
        jLabel4.setPreferredSize(new java.awt.Dimension(67, 15));

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/print2.png"))); // NOI18N
        jButton12.setToolTipText("Nyomtatás!");
        jButton12.setBorderPainted(false);
        jButton12.setContentAreaFilled(false);
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton12MouseExited(evt);
            }
        });
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("First pass only");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Group PN");

        jCheckBox3.setText("Group by JOB");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel5.setText("42Q beállítások:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1138, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addGap(18, 18, 18)))
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3))
                .addGap(900, 900, 900))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1345, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(jLabel3))
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(717, Short.MAX_VALUE)))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void parts() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "select tc_bepns.partnumber ,pn_data.Project ,pn_data.Comment from tc_bepns \n"
                + "left join tc_prodmatrix on tc_prodmatrix.id_tc_bepns = tc_bepns.idtc_bepns\n"
                + "left join tc_becells on tc_prodmatrix.id_tc_becells = tc_becells.idtc_cells\n"
                + "left join pn_data on pn_data.PartNumber = tc_bepns.partnumber\n"
                + "where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'";

        pc.planconnect(query);

        while (pc.rs.next()) {

            String[] pnadatok = new String[3];

            pnadatok[0] = pc.rs.getString(1);
            pnadatok[1] = pc.rs.getString(2);
            pnadatok[2] = pc.rs.getString(3);

            partnumbers.add(pnadatok);

        }

        pc.kinyir();

    }

    public void workstations() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "SELECT tc_bestations.workstation  from tc_bestations where tc_bestations.idtc_bestations in \n"
                + "(select distinct tc_prodmatrix.id_tc_bestations from tc_prodmatrix where tc_prodmatrix.id_tc_becells  = \n"
                + "(SELECT tc_becells.idtc_cells FROM planningdb.tc_becells where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'))";

        pc.planconnect(query);

        while (pc.rs.next()) {

            workstations.add(pc.rs.getString(1));

        }

        pc.kinyir();

    }

    private void DeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowActionPerformed

        this.jTable2.revalidate();
        this.jTable2.invalidate();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) this.jTable2.getModel();

        //meg kell szamolni az info sorokat
        int infsor = 0;

        for (int i = 0; i < model.getRowCount(); i++) {

            if (model.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        int r = this.jTable2.convertRowIndexToModel(this.jTable2.getSelectedRow());
        try {
            if (this.jTable2.getValueAt(r, 3).toString().equals("Terv")) {

                Tc_AdatInterface a = new Tc_AdatInterface(this);
                a.adatbatoltsortorol(r - infsor, r + 1 - infsor);


            } else {

                Tc_AdatInterface a = new Tc_AdatInterface(this);
                a.adatbatoltsortorol(r - infsor, r - 1 - infsor);

            }
        } catch (Exception e) {
        }

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.tablabatolt();
        Tc_Calculator calc = new Tc_Calculator(this, false, 0);

    }//GEN-LAST:event_DeleteRowActionPerformed

    private void DeleteAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAreaActionPerformed

        int rows[] = this.jTable2.getSelectedRows();
        int columns[] = this.jTable2.getSelectedColumns();

        for (int i = 0; i < rows.length; i++) {

            for (int n = 0; n < columns.length; n++) {

                this.jTable2.setValueAt(null, rows[i], columns[n]);

            }

        }

    }//GEN-LAST:event_DeleteAreaActionPerformed

    private void CellaAdatokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CellaAdatokActionPerformed

        Tc_PartsOfCells p = new Tc_PartsOfCells(this);
        p.setVisible(true);

    }//GEN-LAST:event_CellaAdatokActionPerformed

    private void InsertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertRowActionPerformed
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) this.jTable2.getModel();

        int r = this.jTable2.convertRowIndexToModel(this.jTable2.getSelectedRow());

        //meg kell szamolni az info sorokat
        int infsor = 0;

        for (int i = 0; i < model.getRowCount(); i++) {

            if (model.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        try {
            if (this.jTable2.getValueAt(r, 3).toString().equals("Terv")) {

                try {

                    Tc_AdatInterface a = new Tc_AdatInterface(this);
                    a.adatbatoltbeszursor(r + 2 - infsor, r + 3 - infsor);

                } catch (Exception e) {
                }

            }
            if (this.jTable2.getValueAt(r, 3).toString().equals("Tény")) {

                try {
                    Tc_AdatInterface a = new Tc_AdatInterface(this);
                    a.adatbatoltbeszursor(r + 1 - infsor, r + 2 - infsor);

                } catch (Exception e) {
                }

            }
        } catch (Exception e) {
        }

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.tablabatolt();

        Tc_Calculator calc = new Tc_Calculator(this, false, 0);
    }//GEN-LAST:event_InsertRowActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc.png")));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc1.png")));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Tc_Szinvalasztos sz = new Tc_Szinvalasztos(this);
        sz.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos.png")));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos1.png")));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Tc_Behuzos bh = new Tc_Behuzos();
        bh.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SFDClekeresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDClekeresActionPerformed

        //sfdc lekeres
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        a.start();
        Tc_SFDCszal1 sz = new Tc_SFDCszal1(this);
        sz.start();

    }//GEN-LAST:event_SFDClekeresActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search.png")));

    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png")));
    }//GEN-LAST:event_jButton4MouseExited

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String query = jTextField1.getText().trim();
        filter(query);

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseEntered
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search.png")));

    }//GEN-LAST:event_jTextField1MouseEntered

    private void jTextField1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseExited
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png")));
    }//GEN-LAST:event_jTextField1MouseExited

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look.png")));
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        // TODO add your handling code here:
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look1.png")));
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //nezet atalakítas

   
         Tc_AdatInterface a = new Tc_AdatInterface(this);
         a.adatbatoltnezetvaltas();
         a.tablabatolt();
         Tc_Calculator c = new Tc_Calculator(this, false, 0);
         

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
        // TODO add your handling code here:
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email.png")));

    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
        // TODO add your handling code here:
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email1.png")));
    }//GEN-LAST:event_jButton7MouseExited

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //email kuldes

        Tc_Muszakjelentes m;
        try {
            m = new Tc_Muszakjelentes(this);
            m.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseEntered
        // TODO add your handling code here:

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan.png")));
    }//GEN-LAST:event_jButton8MouseEntered

    private void jButton8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseExited
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan1.png")));
    }//GEN-LAST:event_jButton8MouseExited

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
//eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv

        Tc_Tervvaltozasellenor.tervellenor.clear();
        Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
        try {
            t.leker();
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

//eltesszuk az oszlop szelessegeket
        Tc_Betervezo.szelessegek.clear();
        for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "leker");

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseEntered
        // TODO add your handling code here:
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save.png")));
    }//GEN-LAST:event_jButton10MouseEntered

    private void jButton10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseExited
        // TODO add your handling code here:
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save1.png")));
    }//GEN-LAST:event_jButton10MouseExited

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
//terv mentése

//kitoroljuk a szurot
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(""));
        jTextField1.setText("");

//leellenőrizzük , hogy változtatta e valaki a tervet (nem egyezik a getproperty az adatbazisban szereplo nevvel)
        planconnect pc = new planconnect();

        String query = "select tc_terv.user , perm.job_positions_id , tc_terv.idtc_terv , tc_terv.timestamp \n"
                + "from tc_terv\n"
                + "left join perm on perm.system = tc_terv.user\n"
                + "where tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "') and tc_terv.active = 2 and tc_terv.tt = '3' \n"
                + "order by tc_terv.timestamp desc , tc_terv.idtc_terv desc limit 1";

        try {
            pc.planconnect(query);

            while (pc.rs.next()) {

//ha nem egyezik a rendszernev a tervben szereplo nevvel es planneri joga van
                try {
                    if (!pc.rs.getString(1).equals(System.getProperty("user.name")) && (pc.rs.getString(2).equals("1") || pc.rs.getString(2).equals("2") || pc.rs.getString(2).equals("4"))) {

//kiirjuk az infot hogy ki változtatta a tervét utoljára és felajánljuk hogy letöltsük a változást vagy figyelmen kívül hagyjuk és akkor az a változtatás elvész
                        String[] buttons = {"Lekérem a változást!  :) ", "Felülírom azt a tervet!  :( "};
                        int rc = JOptionPane.showOptionDialog(null, "A tervet utoljára " + pc.rs.getString(1) + " módosította ekkor: " + pc.rs.getString(4) + "! Ha rámentesz az ő módosításai elvesznek!", "Figyelem!",
                                JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);

                        if (rc == 0) {

// ez itt a terv lekeres
//eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
                            Tc_Tervvaltozasellenor.tervellenor.clear();
                            Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
                            try {
                                t.leker();
                            } catch (SQLException ex) {
                                Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
                            }

//eltesszuk az oszlop szelessegeket
                            Tc_Betervezo.szelessegek.clear();
                            for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

                                Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

                            }

// terv lekérése
                            Besheets.clear();
                            for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

                                String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

                                Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

                            }

                            Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "mentes");

//updateljuk a nevet a tervben , hogy ne legyen legkozelebb ilyen gond
                            query = "update tc_terv set tc_terv.user = '" + System.getProperty("user.name") + "' where tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells \n"
                                    + "where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "') and tc_terv.active = 2 and tc_terv.tt = '3' \n"
                                    + "order by tc_terv.timestamp desc , tc_terv.idtc_terv desc limit 1";
                            pc.feltolt(query, false);

//es vegül megszakítjuk a futást
                            return;

                        }

                    }
                } catch (Exception e) {
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

//leellenőrizzük , hogy van e olyan pn vagy ws a tervben ami nincs az adatbázisban , és ha van figyelmeztetünk , hogy az el fog veszni
//ebben taroljuk le a hibas adatokat
        String hibalista = "";
//vegigporgetjuk a sorokat
        for (int i = 0; i < jTable2.getRowCount(); i++) {
// ha terv sorban vagyunk és van is bele írva valami
            try {
                if (jTable2.getValueAt(i, 3).toString().equals("Terv") && jTable2.getValueAt(i, 0) != null && !jTable2.getValueAt(i, 0).toString().equals("")) {

                    String pn = jTable2.getValueAt(i, 0).toString();
                    String ws = jTable2.getValueAt(i, 2).toString();
                    boolean vanepn = false;
                    boolean vanews = false;

//vegigporgetjuk a pn listet
                    for (int r = 0; r < Tc_Betervezo.partn.size(); r++) {

//ha megtalaljuk kiugrunk a ciklusbol
                        if (Tc_Betervezo.partn.get(r).equals(pn)) {

                            vanepn = true;
                            break;

                        } else {

                        }

                    }

                    if (vanepn == false) {

                        hibalista += pn + ",";

                    }

//vegigporgetjuk a ws listát is
                    vanews = false;
                    for (int r = 0; r < Tc_Betervezo.works.size(); r++) {

//ha megtalaljuk kiugrunk a ciklusbol
                        if (Tc_Betervezo.works.get(r).equals(ws)) {

                            vanews = true;
                            break;

                        } else {

                        }

                    }

                    if (vanews == false) {

                        hibalista += ws + ",";

                    }

                }
            } catch (Exception e) {
            }

        }

// ha a hibalista nagyobb mint nulla akkor baj van , cselekszunk
        if (hibalista.length() > 0) {

            hibalista = hibalista.substring(0, hibalista.length() - 1);

            String[] buttons = {"Jóvanazúgy!", "Pótolom a setupban!"};
            int rc = JOptionPane.showOptionDialog(null, "A tervben szereplő , de adatbázisban nem fellelhető tételek: " + hibalista + " Ezek nem kerülnek elmentésre!", "Figyelem!",
                    JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[1]);

            if (rc == 1) {

                return;
            }

        }

//mentjuk a tervet
        Tc_Ment ment = new Tc_Ment();

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel2.setText("Mentve: " + df.format(dateobj));

//visszakerdezzuk a tervet , hogy lassuk mit csinaltunk
//eltesszuk az oszlop szelessegeket
        Tc_Betervezo.szelessegek.clear();
        for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "mentes");

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseEntered
        // TODO add your handling code here:
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload.png")));
    }//GEN-LAST:event_jButton11MouseEntered

    private void jButton11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseExited
        // TODO add your handling code here:
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload1.png")));
    }//GEN-LAST:event_jButton11MouseExited

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        //kitoroljuk a szurot
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(""));
        jTextField1.setText("");

        //le kell ellenőrizni , hogy változott e a terv az eddigiekhez képesT
        //lekerjuk a cellahoz tartozo utolso id-t
        String query = "select max(tc_terv.timestamp) as id , tc_becells.cellname  \n"
                + "from tc_terv \n"
                + "left join tc_becells on tc_becells.idtc_cells = tc_terv.idtc_becells \n"
                + "where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "' and tc_terv.tt = 3";

        //az eredmenyt összevetjuk a tervellenorrel
        //ez lesz a valtozonk hogy irhatunk e
        boolean valtozott = true;
        planconnect pc = new planconnect();
        String id = "";
        try {
            pc.planconnect(query);
            while (pc.rs.next()) {

                id = pc.rs.getString(1);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

        //osszenezzuk a tervellenor adatat a most lekertel
        for (int i = 0; i < Tc_Tervvaltozasellenor.tervellenor.get(0)[0].length; i++) {

            if (Tc_Tervvaltozasellenor.tervellenor.get(0)[0][i].toString().equals(id)) {

                valtozott = false;

            }

        }

        //ha valtozott kiirjuk az uzit es megszakitjuk a metodus futását
        if (valtozott == true) {

            infobox info = new infobox();
            info.infoBox("Változott a terv! Kérd le újból!", "Terv változás!");
            return;
        }

        Tc_Ment ment = new Tc_Ment();

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel3.setText("Mentve: " + df.format(dateobj));
        //this.dispose();

        //frissitjuk a tervvaltozas ellenort
//visszakerdezzuk a tervet hogy lassuk jol sikerult e a mentes
//eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
        Tc_Tervvaltozasellenor.tervellenor.clear();
        Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
        try {
            t.leker();
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

//eltesszuk az oszlop szelessegeket
        Tc_Betervezo.szelessegek.clear();
        for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "termelesment");

    }//GEN-LAST:event_jButton11ActionPerformed

    private void SFDCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDCallActionPerformed
        // sfdc lekerese az osszes szakra
        Tc_osszsfdccellabol o = new Tc_osszsfdccellabol(this);
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        o.start();
        a.start();

    }//GEN-LAST:event_SFDCallActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz.png")));
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz1.png")));
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        Tc_Oszlopallito o = new Tc_Oszlopallito(this);
        o.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void TermeklekerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TermeklekerActionPerformed
        // TODO add your handling code here:
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        a.start();
        Tc_Termekleker t = new Tc_Termekleker(this);
        t.start();

    }//GEN-LAST:event_TermeklekerActionPerformed

    private void jScrollPane2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseMoved
        // TODO add your handling code here:
        jTable2.repaint();
    }//GEN-LAST:event_jScrollPane2MouseMoved

    private void jButton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseEntered
        // TODO add your handling code here:
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/calc.png")));

    }//GEN-LAST:event_jButton9MouseEntered

    private void jButton9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseExited
        // TODO add your handling code here:
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/calc2.png")));
    }//GEN-LAST:event_jButton9MouseExited

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        if (Tc_Betervezo.calc == 1) {
            Tc_Betervezo.calc = 2;
            jLabel4.setText("Calc: Összesen");

        } else if (Tc_Betervezo.calc == 2) {

            Tc_Betervezo.calc = 3;
            jLabel4.setText("Calc: Időpontig");

        } else if (Tc_Betervezo.calc == 3) {

            Tc_Betervezo.calc = 1;
            jLabel4.setText("Calc: Soronként");

        }

        Tc_Calculator c = new Tc_Calculator(this, false, 0);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // kalkulátort lefuttatjuk
        try {
            if ((jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") || jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Tény")) && jTable2.getValueAt(jTable2.getSelectedRow() - 1, 3).toString().equals("Infó") && jTable2.getSelectedColumn() > 3) {

                Tc_Calculator c = new Tc_Calculator(this, true, jTable2.getSelectedRow());

            } else if (jTable2.getSelectedColumn() > 3) {

                Tc_Calculator c = new Tc_Calculator(this, false, jTable2.getSelectedRow());

            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void keresesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keresesActionPerformed
        // TODO add your handling code here:
        try {
            jTextField1.setText(jTable2.getValueAt(jTable2.getSelectedRow(), jTable2.getSelectedColumn()).toString());
        } catch (Exception e) {

            jTextField1.setText("");

        }
        String query = jTextField1.getText().trim();
        filter(query);

    }//GEN-LAST:event_keresesActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        // TODO add your handling code here:

        Tc_Betervezo.csuk = false;
        Tc_Calculator c = new Tc_Calculator(this, false, 0);

    }//GEN-LAST:event_jTable2KeyPressed

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased

        Tc_Betervezo.csuk = false;
        Tc_Calculator c = new Tc_Calculator(this, false, 0);

    }//GEN-LAST:event_jTable2KeyReleased

    private void jTable2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable2PropertyChange

        Tc_Betervezo.csuk = true;

        Tc_Betervezo.szelessegek.clear();

        for (int i = 0; i < jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(jTable2.getColumnModel().getColumn(i).getWidth());

        }

        if (Tc_Betervezo.csuk == false) {
            Tc_Calculator c = new Tc_Calculator(this, false, 0);
        }

    }//GEN-LAST:event_jTable2PropertyChange

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:

        Tc_Betervezo.szelessegek.clear();

        for (int i = 0; i < jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(jTable2.getColumnModel().getColumn(i).getWidth());

        }
        
        Tc_Calcablakszal c = new Tc_Calcablakszal(this, Tc_Betervezo.calculatorablaktarolo.get(0));
        c.start();

    }//GEN-LAST:event_jTable2MouseReleased

    private void jButton12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseEntered
        // TODO add your handling code here:
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/print1.png")));
    }//GEN-LAST:event_jButton12MouseEntered

    private void jButton12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseExited
        // TODO add your handling code here:
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/print2.png")));
    }//GEN-LAST:event_jButton12MouseExited

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        MessageFormat header = new MessageFormat("Report print");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");

        try {

            PrintRequestAttributeSet attr = new HashPrintRequestAttributeSet();

            jTable2.print(JTable.PrintMode.FIT_WIDTH, header, footer);

            // jTable2.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (java.awt.print.PrinterException e) {

            System.err.format("Cannot print", e.getMessage());

        }// TODO add your handling code here:

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void pnkarbantartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnkarbantartoActionPerformed

        //példányosítunk egy pnkarbit és átadjuk neki a cella értékét amiből indítjuk
        try {
            Tc_Pnkarbantarto p = new Tc_Pnkarbantarto(jTable2.getValueAt(jTable2.getSelectedRow(), jTable2.getSelectedColumn()).toString());
            p.setVisible(true);
        } catch (Exception e) {

            Tc_Pnkarbantarto p = new Tc_Pnkarbantarto("");
            p.setVisible(true);

        }


    }//GEN-LAST:event_pnkarbantartoActionPerformed

    private void DataLoaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataLoaderActionPerformed

        Tc_DataLoader d = new Tc_DataLoader(this);
        d.setVisible(true);

    }//GEN-LAST:event_DataLoaderActionPerformed

    private void MernokiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MernokiActionPerformed
        // TODO add your handling code here:

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.mernoki();

        //ha nincs bekapcsolva a mernoki akkor jelenitjuk csak meg az ido beallitast
        int infsor = 0;

        for (int i = 0; i < jTable2.getRowCount(); i++) {

            if (jTable2.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        try {
            if (tablaadat[jTable2.getSelectedRow() - infsor][jTable2.getSelectedColumn()].eng == 1) {
                Tc_Mernokiido i = new Tc_Mernokiido(this);
                i.setVisible(true);
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_MernokiActionPerformed

    private void JPopupMenu1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_JPopupMenu1ComponentShown


    }//GEN-LAST:event_JPopupMenu1ComponentShown

    private void JPopupMenu1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JPopupMenu1FocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_JPopupMenu1FocusGained

    private void MernokiComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MernokiComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_MernokiComponentShown

    private void MernokiPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MernokiPropertyChange
        // TODO add your handling code here:
        try {
            if (!jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv")) {

                Mernoki.setEnabled(false);

            } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") && ablak.planner) {

                Mernoki.setEnabled(true);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_MernokiPropertyChange

    private void SzinezoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SzinezoActionPerformed
        
        Tc_Szinezo sz = new Tc_Szinezo( this);
        sz.setVisible(true);
        
    }//GEN-LAST:event_SzinezoActionPerformed

    private void SzinezoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SzinezoPropertyChange
        try {
            if (!jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv")) {

                Szinezo.setEnabled(false);

            } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") && ablak.planner) {

                Szinezo.setEnabled(true);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_SzinezoPropertyChange

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void filter(String query) {

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CellaAdatok;
    private javax.swing.JMenuItem DataLoader;
    private javax.swing.JMenuItem DeleteArea;
    public javax.swing.JMenuItem DeleteRow;
    private javax.swing.JMenuItem InsertRow;
    public javax.swing.JPopupMenu JPopupMenu1;
    public javax.swing.JMenuItem Mernoki;
    private javax.swing.JMenu MuveletekSorokkal;
    private javax.swing.JMenuItem SFDCall;
    private javax.swing.JMenuItem SFDClekeres;
    private javax.swing.JMenu SFDCmuveletek;
    public javax.swing.JMenuItem Szinezo;
    private javax.swing.JMenuItem Termekleker;
    private javax.swing.JButton jButton1;
    public javax.swing.JButton jButton10;
    public javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JCheckBox jCheckBox2;
    public javax.swing.JCheckBox jCheckBox3;
    public javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenuItem kereses;
    public static javax.swing.JMenuItem pnkarbantarto;
    // End of variables declaration//GEN-END:variables
}
