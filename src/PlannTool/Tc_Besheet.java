/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool;

import static PlannTool.Tc_Betervezo.Besheets;
import static PlannTool.Tc_Betervezo.jComboBox1;
import static PlannTool.Tc_Betervezo.jTabbedPane1;
import static PlannTool.Tc_SfdcData.ig;
import static PlannTool.Tc_SfdcData.tol;
import static PlannTool.ablak.jTable1;
import static PlannTool.ablak.jTable2;
import static PlannTool.ablak.jTextField1;
import static PlannTool.ablak.model;
import static PlannTool.ablak.model1;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;

/**
 *
 * @author gabor_hanacsek
 */
public class Tc_Besheet extends javax.swing.JPanel {

    public List<String> partnumbers = new ArrayList<String>();
    public List<String> workstations = new ArrayList<String>();

    Tc_Betervezo bt;

    public Tc_Besheet(Tc_Betervezo b) throws SQLException, ClassNotFoundException {
        initComponents();

        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        new ExcelAdapter(jTable2);
        jTable2.getTableHeader().setDefaultRenderer(new Tc_TervTablaRenderer());
        jTable2.setDefaultRenderer(Object.class, new Tc_TervTooltipRenderer(this));
        bt = b;

        //letiltjuk a terv mentése gombot ha a planner false
        if (ablak.planner == false) {

            jButton10.setEnabled(false);
        } //letiltjuk a teny menteset ha planner van bent
        else {
            jButton11.setEnabled(false);
        }

        //ha en vagyok bent mindkettő enged
        if (System.getProperty("user.name").equals("gabor_hanacsek")) {

            jButton10.setEnabled(true);
            jButton11.setEnabled(true);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPopupMenu1 = new javax.swing.JPopupMenu();
        CellaAdatok = new javax.swing.JMenuItem();
        DeleteArea = new javax.swing.JMenuItem();
        MuveletekSorokkal = new javax.swing.JMenu();
        InsertRow = new javax.swing.JMenuItem();
        DeleteRow = new javax.swing.JMenuItem();
        SFDCmuveletek = new javax.swing.JMenu();
        SFDClekeres = new javax.swing.JMenuItem();
        SFDCall = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        CellaAdatok.setText("Elérhető PN / WS");
        CellaAdatok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CellaAdatokActionPerformed(evt);
            }
        });
        JPopupMenu1.add(CellaAdatok);

        DeleteArea.setText("Terület törlése");
        DeleteArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAreaActionPerformed(evt);
            }
        });
        JPopupMenu1.add(DeleteArea);

        MuveletekSorokkal.setText("Sor +/-");
        MuveletekSorokkal.setActionCommand("Sor + / -");
        MuveletekSorokkal.setAutoscrolls(true);

        InsertRow.setText("Sor beszúrása fölé");
        InsertRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(InsertRow);

        DeleteRow.setText("Sor törlése");
        DeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(DeleteRow);

        JPopupMenu1.add(MuveletekSorokkal);

        SFDCmuveletek.setText("Műveletek az SFDC vel:");

        SFDClekeres.setText("SFDC lekérés");
        SFDClekeres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDClekeresActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDClekeres);

        SFDCall.setText("SFDC lekérése az összes cellára!");
        SFDCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDCallActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDCall);

        JPopupMenu1.add(SFDCmuveletek);

        setComponentPopupMenu(JPopupMenu1);
        setPreferredSize(new java.awt.Dimension(1800, 700));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc1.png"))); // NOI18N
        jButton1.setToolTipText("Ter/Tény színezése");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PartNumber", "Job", "WorkStation", "Terv/Tény"
            }
        ));
        jTable2.setCellSelectionEnabled(true);
        jTable2.setComponentPopupMenu(JPopupMenu1);
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(130);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos1.png"))); // NOI18N
        jButton2.setToolTipText("Behúzós");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png"))); // NOI18N
        jButton4.setToolTipText("Kereső");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });

        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextField1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField1MouseExited(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look1.png"))); // NOI18N
        jButton6.setToolTipText("Nézetváltás (PN / JOB szerint)");
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email1.png"))); // NOI18N
        jButton7.setToolTipText("Műszakjelentés küldése");
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nincs elküldve!");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan1.png"))); // NOI18N
        jButton8.setToolTipText("Terv lekérése!");
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton8MouseExited(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save1.png"))); // NOI18N
        jButton10.setToolTipText("Terv mentése!");
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerifyInputWhenFocusTarget(false);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton10MouseExited(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload1.png"))); // NOI18N
        jButton11.setToolTipText("Tény mentése!");
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton11MouseExited(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nincs mentve!");

        jLabel3.setText("Nincs mentve!");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz1.png"))); // NOI18N
        jButton5.setToolTipText("Oszlop szélesség állítás!");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void parts() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "SELECT tc_bepns.partnumber  from tc_bepns where tc_bepns.idtc_bepns in \n"
                + "(select distinct tc_prodmatrix.id_tc_bepns from tc_prodmatrix where tc_prodmatrix.id_tc_becells  = \n"
                + "(SELECT tc_becells.idtc_cells FROM planningdb.tc_becells where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'))";

        pc.planconnect(query);

        while (pc.rs.next()) {

            partnumbers.add(pc.rs.getString(1));

        }

    }

    public void workstations() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "SELECT tc_bestations.workstation  from tc_bestations where tc_bestations.idtc_bestations in \n"
                + "(select distinct tc_prodmatrix.id_tc_bestations from tc_prodmatrix where tc_prodmatrix.id_tc_becells  = \n"
                + "(SELECT tc_becells.idtc_cells FROM planningdb.tc_becells where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'))";

        pc.planconnect(query);

        while (pc.rs.next()) {

            workstations.add(pc.rs.getString(1));

        }

    }


    private void DeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowActionPerformed

        jTable2.revalidate();
        jTable2.invalidate();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();

        model.removeRow(jTable2.convertRowIndexToModel(jTable2.getSelectedRow()));

        jTable2.setModel(model);

        Tc_Calculator calc = new Tc_Calculator(this);


    }//GEN-LAST:event_DeleteRowActionPerformed

    private void DeleteAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAreaActionPerformed

        int rows[] = jTable2.getSelectedRows();
        int columns[] = jTable2.getSelectedColumns();

        for (int i = 0; i < rows.length; i++) {

            for (int n = 0; n < columns.length; n++) {

                jTable2.setValueAt("", rows[i], columns[n]);

            }

        }


    }//GEN-LAST:event_DeleteAreaActionPerformed

    private void CellaAdatokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CellaAdatokActionPerformed

        Tc_PartsOfCells p = new Tc_PartsOfCells(this);
        p.setVisible(true);

    }//GEN-LAST:event_CellaAdatokActionPerformed

    private void InsertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertRowActionPerformed
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();

        if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).equals("Terv")) {

            int i = jTable2.convertRowIndexToModel(jTable2.getSelectedRow());
            model.insertRow(i, new Object[]{null, null, null, "Tény"});
            //model.insertRow(i, new Object[]{null, null, null, "Terv"});

        } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).equals("Tény")) {

            int i = jTable2.convertRowIndexToModel(jTable2.getSelectedRow());
            //model.insertRow(i - 1, new Object[]{null, null, null, "Tény"});
            model.insertRow(i, new Object[]{null, null, null, "Terv"});

        }

        jTable2.setModel(model);
        Tc_Calculator calc = new Tc_Calculator(this);

    }//GEN-LAST:event_InsertRowActionPerformed

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased

        if (!jTable2.isEditing()) {
            Tc_Calculator calc = new Tc_Calculator(this);
        }

    }//GEN-LAST:event_jTable2KeyReleased

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc.png")));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/colorc1.png")));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Tc_Szinvalasztos sz = new Tc_Szinvalasztos(this);
        sz.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos.png")));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/behuzos1.png")));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Tc_Behuzos bh = new Tc_Behuzos();
        bh.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SFDClekeresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDClekeresActionPerformed

        //sfdc lekeres
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        a.start();
        Tc_SFDCszal sz = new Tc_SFDCszal(this);
        sz.start();


    }//GEN-LAST:event_SFDClekeresActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search.png")));

    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png")));
    }//GEN-LAST:event_jButton4MouseExited

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String query = jTextField1.getText().trim();
        filter(query);

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseEntered
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search.png")));

    }//GEN-LAST:event_jTextField1MouseEntered

    private void jTextField1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseExited
        // TODO add your handling code here:
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/search1.png")));
    }//GEN-LAST:event_jTextField1MouseExited

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look.png")));
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        // TODO add your handling code here:
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/look1.png")));
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //nezet atalakítas

        //betesszuk egy uj modelbe a tabla jelenlegi adatait
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();

        //betesszuk tommbe az adatokat
        String[][] adatok = new String[model.getRowCount()][model.getColumnCount()];

        for (int i = 0; i < model.getRowCount(); i++) {

            for (int n = 0; n < model.getColumnCount(); n++) {

                try {
                    adatok[i][n] = model.getValueAt(i, n).toString();
                } catch (Exception e) {
                }
            }

        }

        //kinullazzuk a modelt
        model.setRowCount(0);
        //elkezdjuk belepakolni az adatokat  , sor , oszlop
        //az elmentett adat sorait porgetjuk , ha van mar akkor nem irjuk be megegyszer
        for (int r = 0; r < adatok.length; r++) {

            //ezzel figyeljuk hogy van e mar ilyen pn és job
            boolean vanmar = false;
            //vegigporgetjuk az uj tablat 
            for (int sor = 0; sor < model.getRowCount(); sor++) {

                // ha egyezik a pn és a JOB , és a ws es a terv/teny azaz van mar ilyen
                try {
                    if (adatok[r][0].toString().equals(model.getValueAt(sor, 0)) && adatok[r][1].toString().equals(model.getValueAt(sor, 1)) && adatok[r][2].toString().equals(model.getValueAt(sor, 2)) && adatok[r][3].toString().equals(model.getValueAt(sor, 3))) {

                        vanmar = true;
                        //akkor beirjuk a darabot a megfelelo oszlopbol az aktualis cellaba
                        for (int o = 4; o < adatok.length; o++) {

                            try {
                                if (!adatok[r][o].toString().equals("") && adatok[r][o] != null) {

                                    model.setValueAt(adatok[r][o].toString(), sor, o);

                                }
                            } catch (Exception e) {
                            }

                        }

                    }
                } catch (Exception e) {
                }

            }

            //de ha nincs , azaz false a vanemar , kell egy uj sor
            if (vanmar == false) {

                //beallitjuk a pn , job , ws -t és a terv/ tenyt
                model.addRow(new Object[]{adatok[r][0], adatok[r][1], adatok[r][2], adatok[r][3]});

                //megkeressuk az oszlopban a db ot
                for (int o = 4; o < adatok[1].length; o++) {

                    try {
                        if (!adatok[r][o].toString().equals("") && adatok[r][o] != null) {

                            model.setValueAt(adatok[r][o].toString(), model.getRowCount() - 1, o);

                        }
                    } catch (Exception e) {
                    }

                }

            }

        }

        jTable2.setModel(model);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
        // TODO add your handling code here:
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email.png")));


    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
        // TODO add your handling code here:
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/email1.png")));
    }//GEN-LAST:event_jButton7MouseExited

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //email kuldes

        Tc_Muszakjelentes m;
        try {
            m = new Tc_Muszakjelentes(this);
            m.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseEntered
        // TODO add your handling code here:

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan.png")));
    }//GEN-LAST:event_jButton8MouseEntered

    private void jButton8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseExited
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/plan1.png")));
    }//GEN-LAST:event_jButton8MouseExited

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
        Tc_Tervvaltozasellenor.tervellenor.clear();
        Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
        try {
            t.leker();
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {

            String name = jTabbedPane1.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) jTabbedPane1.getComponentAt(i));

        }

        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        String first = "";
        String second = "";

        try {
            first = df.format(bt.jDateChooser1.getDate());
            second = df.format(bt.jDateChooser2.getDate());
        } catch (Exception e) {
            e.printStackTrace();
        }

        Date one = null;
        Date two = null;
        int napok = 0;
        if (!first.equals("") && !second.equals("")) {
            try {
                one = df.parse(first);
            } catch (ParseException ex) {
                Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                two = df.parse(second);
            } catch (ParseException ex) {
                Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        Tc_Napszamolo nap = new Tc_Napszamolo();
        if (!first.equals("") && !second.equals("")) {
            napok = nap.daysBetweenUsingJoda(one, two);
        }

        //System.out.println(napok);
        //hozzaadjuk a napok es a muszakhossznak megfelelo oszlopok szamat a tablahoz
        int n = jTabbedPane1.getSelectedIndex();
        String neve = jTabbedPane1.getTitleAt(n);

        //kitoroljuk az oszlopokat
        DefaultTableModel model = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();
        model.setColumnCount(4);

        //oszlopok neve a datumbol
        Calendar c = Calendar.getInstance();
        c.setTime(bt.jDateChooser1.getDate());
        Date dt = new Date();
        dt = c.getTime();
        org.joda.time.format.DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyy-MM-dd");
        org.joda.time.format.DateTimeFormatter fmtnap = DateTimeFormat.forPattern("E");

        DateTime dtOrg = new DateTime(dt);
        String columneve = "";
        String szak = "";
        String napneve = "";
        TableColumn column = null;

        //napok szamaszor futtatjuk
        for (int i = 0; i < napok; i++) {

            //ha 12 órás a műszakrend 2 szer
            if (jComboBox1.getSelectedIndex() == 0) {
                for (int k = 0; k < 2; k++) {

                    szak = (k == 0) ? " 06:00" : " 18:00";
                    columneve = fmt.print(dtOrg.plusDays(i)) + szak;

                    napneve = fmtnap.print(dtOrg.plusDays(i));

                    model.addColumn(columneve + " " + napneve);

                }
            }

            //ha 8 órás 3 szor
            if (jComboBox1.getSelectedIndex() == 1) {
                for (int k = 0; k < 3; k++) {

                    if (k == 0) {

                        szak = " 06:00";

                    } else if (k == 1) {

                        szak = " 14:00";
                    } else {

                        szak = " 22:00";

                    }
                    columneve = fmt.print(dtOrg.plusDays(i)) + szak;
                    napneve = fmtnap.print(dtOrg.plusDays(i));
                    model.addColumn(columneve + " " + napneve);

                }
            }

        }
        //col szelesseg allitas

        for (int i = 0; i < Besheets.get(neve).jTable2.getModel().getColumnCount(); i++) {

            if (i != 3) {
                column = Besheets.get(neve).jTable2.getColumnModel().getColumn(i);
                column.setPreferredWidth(130);
            }

        }

        //lekerdezzuk az adatbazis adatokat
        String Query = "select tc_terv.date , tc_bepns.partnumber , tc_terv.job , tc_bestations.workstation , tc_terv.qty , tc_terv.tt \n"
                + "from tc_terv \n"
                + "left join tc_bepns on tc_bepns.idtc_bepns = tc_terv.idtc_bepns \n"
                + "left join tc_bestations on tc_bestations.idtc_bestations = tc_terv.idtc_bestations\n"
                + "left join tc_becells on tc_becells.idtc_cells = tc_terv.idtc_becells\n"
                + "where tc_terv.date between '" + fmt.print(dtOrg) + " 06:00:00" + "' and '" + columneve + ":00" + "' and tc_terv.active = 2 and tc_becells.cellname = '" + neve + "'  \n"
                + "order by tc_terv.date , tc_terv.wtf";

        //feldolgozzuk az eredmenyt
        planconnect pc = new planconnect();
        try {
            pc.planconnect(Query);
            model.setRowCount(0);
            int r = 0;
            String terv = "";

            //vegigporgetjuk a resultsetet
            while (pc.rs.next()) {

                //porgetjuk az oszlopokat
                for (int i = 4; i < model.getColumnCount(); i++) {

                    //h egyezik a query datuma az oszlop datumaval akkor 
                    if (pc.rs.getString(1).equals(model.getColumnName(i).substring(0, model.getColumnName(i).length() - 4) + ":00.0")) {

                        // hozzaadunk egy terv vagy teny sort
                        if (pc.rs.getString(6).equals("0")) {

                            terv = "Terv";
                        } else {
                            terv = "Tény";
                        }
                        model.addRow(new Object[]{pc.rs.getString(2), pc.rs.getString(3), pc.rs.getString(4), terv});
                        model.setValueAt(pc.rs.getString(5), r, i);
                        r++;

                    }

                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

        Besheets.get(neve).jTable2.setModel(model);
        Tc_Calculator calc = new Tc_Calculator(Besheets.get(neve));


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseEntered
        // TODO add your handling code here:
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save.png")));
    }//GEN-LAST:event_jButton10MouseEntered

    private void jButton10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseExited
        // TODO add your handling code here:
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/save1.png")));
    }//GEN-LAST:event_jButton10MouseExited

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        //terv mentése
        //lekerjuk az infokat (pn , cell , ws , és a tervet )
        //cellak
        String query = "select * from tc_becells";
        planconnect pc = new planconnect();
        List<String[][]> gyujto = new ArrayList<String[][]>();

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] cellist = new String[last][2];

            while (pc.rs.next()) {

                cellist[i][0] = pc.rs.getString(1);
                cellist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(cellist);

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

        //wsek
        query = "select * from tc_bestations";

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] wslist = new String[last][2];

            while (pc.rs.next()) {

                wslist[i][0] = pc.rs.getString(1);
                wslist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(wslist);

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

        //pnek
        query = "select * from tc_bepns";

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] pnlist = new String[last][2];

            while (pc.rs.next()) {

                pnlist[i][0] = pc.rs.getString(1);
                pnlist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(pnlist);

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }
        //kitalaljuk a sheet nevet
        int n = jTabbedPane1.getSelectedIndex();
        String neve = jTabbedPane1.getTitleAt(n);
        String tol = Besheets.get(neve).jTable2.getColumnName(4).substring(0, 10) + " 06:00:00";
        String ig = "";

        //tol ig intervallum a sheeten
        if (Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(11, 12).equals("2")) {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 22:00:00";

        } else {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 18:00:00";

        }

        //megkeressuk az id -kat es vegigmegyunk a tablan , oszlop , sor
        DefaultTableModel t2 = new DefaultTableModel();
        t2 = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();
        int oszlopszam = t2.getColumnCount();  //t2 a tervtabla 
        int sorszam = t2.getRowCount();

        String pn = "";
        String ws = "";
        String cell = "";
        String job = "";
        String pnid = "";
        String wsid = "";
        String cellid = "";
        String feltoltadat = "";
        // elinditjuk a nagy ciklust , az oszlopok szama ()
        for (int i = 0; i < oszlopszam; i++) {

            //kis ciklus , sorok szama
            for (int r = 0; r < sorszam; r++) {

                //ha nem infó a sor
                if (!t2.getValueAt(r, 3).equals("Infó")) {

                    pnid = "";
                    wsid = "";

                    //ha nem nullák a pn , job , ws
                    if (t2.getValueAt(r, 0) != null) {
                        pn = t2.getValueAt(r, 0).toString();
                    }
                    if (t2.getValueAt(r, 1) != null) {
                        job = t2.getValueAt(r, 1).toString();
                    }
                    if (t2.getValueAt(r, 2) != null) {
                        ws = t2.getValueAt(r, 2).toString();
                    }
                    cell = neve;

                    // megallapitjuk az id -kat (pn,cella,ws) a lekerdezeshez
                    //pnid  
                    for (int k = 0; k < gyujto.get(2).length; k++) {

                        if (pn.equals(gyujto.get(2)[k][1])) {

                            pnid = gyujto.get(2)[k][0];
                            break;

                        }

                    }

                    //wsid
                    for (int k = 0; k < gyujto.get(1).length; k++) {

                        if (ws.equals(gyujto.get(1)[k][1])) {

                            wsid = gyujto.get(1)[k][0];
                            break;

                        }

                    }

                    //cellid
                    for (int k = 0; k < gyujto.get(0).length; k++) {

                        if (cell.equals(gyujto.get(0)[k][1])) {

                            cellid = gyujto.get(0)[k][0];
                            break;

                        }

                    }

                    //megkeressuk a datumot
                    //12 vagy 8 órás a terv?
                    String beosztas = "";
                    if (t2.getColumnName(t2.getColumnCount() - 1).substring(11, 12).equals("2")) {

                        beosztas = "8";

                    } else {

                        beosztas = "12";

                    }

                    String datum = "";
                    String ora = "";

                    if (i > 3) {

                        if (t2.getColumnName(i).substring(11, 13).equals("06")) {

                            ora = " 06:00:00";
                        }

                        if (t2.getColumnName(i).substring(11, 13).equals("18") && beosztas.equals("12")) {

                            ora = " 18:00:00";
                        }

                        if (t2.getColumnName(i).substring(11, 13).equals("14") && beosztas.equals("8")) {

                            ora = " 14:00:00";
                        }

                        if (t2.getColumnName(i).substring(11, 13).equals("22")) {

                            ora = " 22:00:00";
                        }

                        //ha van beírva valami darabszám és terv asor
                        if (t2.getValueAt(r, i) != null && !t2.getValueAt(r, i).toString().equals("") && t2.getValueAt(r, 3).toString().equals("Terv")) {
                            int tervwtf = (r * i);
                            int tenywtf = tervwtf + 1;

                            datum = t2.getColumnName(i).substring(0, 10) + ora;

                            feltoltadat += "('" + cellid + "','" + wsid + "','" + pnid + "','" + job + "','" + datum + "','" + t2.getValueAt(r, i) + "','" + tervwtf + "'," + "0" + ",'" + System.getProperty("user.name") + "'),";
                            try {
                                feltoltadat += "('" + cellid + "','" + wsid + "','" + pnid + "','" + job + "','" + datum + "','" + t2.getValueAt(r + 1, i).toString() + "','" + tenywtf + "'," + "1" + ",'" + System.getProperty("user.name") + "'),";
                            } catch (Exception e) {

                                feltoltadat += "('" + cellid + "','" + wsid + "','" + pnid + "','" + job + "','" + datum + "','" + "0" + "','" + tenywtf + "'," + "1" + ",'" + System.getProperty("user.name") + "'),";

                            }

                            pn = "";
                            ws = "";
                            cell = "";
                            job = "";
                            //ha terv az utolsó sor akkor is
                        }
                    }
                }

            }
        }

        if (feltoltadat.length() > 0) {
            feltoltadat = feltoltadat.substring(0, feltoltadat.length() - 1);

            //delet query
            String deletequery = "delete from tc_terv where tc_terv.active = 0 and tc_terv.idtc_becells = '" + cellid + "'";
            pc.feltolt(deletequery, false);

            //update 2-->1-->0
            String updatequery = "update tc_terv set active = CASE when tc_terv.active = 2 then 1 when tc_terv.active = 1 then 0 end where tc_terv.active in (2,1) and tc_terv.date between '" + tol + "' and '" + ig + "' and tc_terv.idtc_becells = '" + cellid + "'";
            pc.feltolt(updatequery, false);

            //feltoltjuk az adatokat
            String feltoltquery = "insert ignore tc_terv (tc_terv.idtc_becells , tc_terv.idtc_bestations , tc_terv.idtc_bepns , tc_terv.job , tc_terv.date , tc_terv.qty , tc_terv.wtf , tc_terv.tt , tc_terv.user) values" + feltoltadat;
            pc.feltolt(feltoltquery, true);

        }

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel2.setText("Mentve: " + df.format(dateobj));
        //this.dispose();


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseEntered
        // TODO add your handling code here:
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload.png")));
    }//GEN-LAST:event_jButton11MouseEntered

    private void jButton11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseExited
        // TODO add your handling code here:
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/upload1.png")));
    }//GEN-LAST:event_jButton11MouseExited

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        //le kell ellenőrizni , hogy változott e a terv az eddigiekhez képest?
        //lekerjuk a cellahoz tartozo utolso id-t
        String query = "select max(tc_terv.idtc_terv) as id , tc_becells.cellname  \n"
                + "from tc_terv \n"
                + "left join tc_becells on tc_becells.idtc_cells = tc_terv.idtc_becells \n"
                + "where tc_becells.cellname = '" + Tc_Betervezo.jTabbedPane1.getTitleAt(Tc_Betervezo.jTabbedPane1.getSelectedIndex()) + "' and tc_terv.tt = 0";

        //az eredmenyt összevetjuk a tervellenorrel
        //ez lesz a valtozonk hogy irhatunk e
        boolean valtozott = true;
        planconnect pc = new planconnect();
        String id = "";
        try {
            pc.planconnect(query);
            while (pc.rs.next()) {

                id = pc.rs.getString(1);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

        //osszenezzuk a tervellenor adatat a most lekertel
        for (int i = 0; i < Tc_Tervvaltozasellenor.tervellenor.get(0)[0].length; i++) {

            if (Tc_Tervvaltozasellenor.tervellenor.get(0)[0][i].toString().equals(id)) {

                valtozott = false;

            }

        }

        //ha valtozott kiirjuk az uzit es megszakitjuk a metodus futását
        if (valtozott == true) {

            infobox info = new infobox();
            info.infoBox("Változott a terv! Kérd le újból!", "Terv változás!");
            return;
        }

        //mentjuk a tervet , összeallitjuk az adat queryt
        //bejarjuk az oszlopokat 4 től
        query = "insert into tc_terv (date , idtc_becells , idtc_bestations , idtc_bepns , qty , wtf , active , tt , user , job ) values";
        String adat = "";
        for (int i = 4; i < jTable2.getColumnCount(); i++) {
            //elinditjuk a sorok bejarasat is
            for (int r = 0; r < jTable2.getRowCount(); r++) {
                //ha van adat a cellaban és tény sorban vagyunk akkor begyűjtjük

                if (jTable2.getValueAt(r, i) != null && jTable2.getValueAt(r, 3).toString().equals("Tény")) {
                    String job = "";
                    int tenywtf = r * i;
                    try {
                        job = jTable2.getValueAt(r, 1).toString();
                    } catch (Exception e) {
                    }
                    adat += "('" + jTable2.getColumnName(i).substring(0, 16) + ":00',(select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + bt.jTabbedPane1.getTitleAt(bt.jTabbedPane1.getSelectedIndex()) + "'),(select tc_bestations.idtc_bestations from tc_bestations where tc_bestations.workstation = '" + jTable2.getValueAt(r, 2).toString() + "'),(select tc_bepns.idtc_bepns from tc_bepns where tc_bepns.partnumber = '" + jTable2.getValueAt(r, 0).toString() + "'),'" + jTable2.getValueAt(r, i).toString() + "','" + tenywtf + "','2','1','" + System.getProperty("user.name") + "','" + job + "'),";
                }

            }

        }

        adat = adat.substring(0, adat.length() - 1);
        //összerakjuk a két queryt

        query += adat;

        //töröljük a régi adatokat
        //planconnect pc = new planconnect();
        String deletequery = "delete from tc_terv where tc_terv.active = 0 and tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + bt.jTabbedPane1.getTitleAt(bt.jTabbedPane1.getSelectedIndex()) + "')and tc_terv.tt = 1";
        pc.feltolt(deletequery, false);

        //a tol és ig adatok kitalalasa
        String neve = bt.jTabbedPane1.getTitleAt(bt.jTabbedPane1.getSelectedIndex());
        String tol = Besheets.get(neve).jTable2.getColumnName(4).substring(0, 10) + " 06:00:00";
        String ig = "";

        //tol ig intervallum a sheeten
        if (Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(11, 12).equals("2")) {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 22:00:00";

        } else {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 18:00:00";

        }

        //update 2-->1-->0 ami tény!!
        String updatequery = "update tc_terv set active = CASE when tc_terv.active = 2 then 1 when tc_terv.active = 1 then 0 end where tc_terv.active in (2,1) and tc_terv.date between '" + tol + "' and '" + ig + "' and tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + bt.jTabbedPane1.getTitleAt(bt.jTabbedPane1.getSelectedIndex()) + "') and tc_terv.tt = 1";
        pc.feltolt(updatequery, false);

        //feltoltjuk az uj adatokat!
        pc.feltolt(query, true);

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel3.setText("Mentve: " + df.format(dateobj));
        //this.dispose();


    }//GEN-LAST:event_jButton11ActionPerformed

    private void SFDCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDCallActionPerformed
        // sfdc lekerese az osszes szakra
        Tc_osszsfdccellabol o = new Tc_osszsfdccellabol(this);
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        o.start();
        a.start();


    }//GEN-LAST:event_SFDCallActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz.png")));
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/kepek/osz1.png")));
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        Tc_Oszlopallito o = new Tc_Oszlopallito(this);
        o.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void filter(String query) {

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CellaAdatok;
    private javax.swing.JMenuItem DeleteArea;
    private javax.swing.JMenuItem DeleteRow;
    private javax.swing.JMenuItem InsertRow;
    public javax.swing.JPopupMenu JPopupMenu1;
    private javax.swing.JMenu MuveletekSorokkal;
    private javax.swing.JMenuItem SFDCall;
    private javax.swing.JMenuItem SFDClekeres;
    private javax.swing.JMenu SFDCmuveletek;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
