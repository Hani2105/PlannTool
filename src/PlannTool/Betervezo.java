/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool;

import java.awt.Toolkit;
import java.sql.Array;
import java.sql.SQLException;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import static java.util.Collections.list;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.joda.time.DateTime;

import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

/**
 *
 * @author gabor_hanacsek
 */
public class Betervezo extends javax.swing.JFrame {

    /**
     */
    public String[][] pns;
    public static List<String> partn = new ArrayList<String>();
    public static List<String> workstations = new ArrayList<String>();
    public static Map<String, Besheet> Besheets = new TreeMap();

    public Betervezo() throws SQLException, ClassNotFoundException {

        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        seticon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new JTabbedPaneWithCloseIcons();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Cellaválasztó");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Setup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tól:");

        jLabel2.setText("Ig:");

        jButton3.setText("Lekér");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Műszakrend:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12 órás", "8 órás" }));

        jButton4.setText("+");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Terv mentése");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void seticon() {

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("kepek/2.jpg")));

    }

    //globalis valtozoban letaroljuk a setupban levo partnumbereket hogy le tudjuk ellenorizni a rendererben a letezesuket

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            cellavalaszto c = new cellavalaszto(this);
            c.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        tc_besetup c = null;
        try {
            c = new tc_besetup();
        } catch (SQLException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }
        c.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        Besheets.clear();
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {

            String name = jTabbedPane1.getTitleAt(i);

            Besheets.put(name, (Besheet) jTabbedPane1.getComponentAt(i));

        }

        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        String first = "";
        String second = "";

        try {
            first = df.format(jDateChooser1.getDate());
            second = df.format(jDateChooser2.getDate());
        } catch (Exception e) {
            e.printStackTrace();
        }

        Date one = null;
        Date two = null;
        int napok = 0;
        if (!first.equals("") && !second.equals("")) {
            try {
                one = df.parse(first);
            } catch (ParseException ex) {
                Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                two = df.parse(second);
            } catch (ParseException ex) {
                Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        napszamolo nap = new napszamolo();
        if (!first.equals("") && !second.equals("")) {
            napok = nap.daysBetweenUsingJoda(one, two);
        }

        //System.out.println(napok);
        //hozzaadjuk a napok es a muszakhossznak megfelelo oszlopok szamat a tablahoz
        int n = jTabbedPane1.getSelectedIndex();
        String neve = jTabbedPane1.getTitleAt(n);

        //kitoroljuk az oszlopokat
        DefaultTableModel model = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();
        model.setColumnCount(4);

        //oszlopok neve a datumbol
        Calendar c = Calendar.getInstance();
        c.setTime(jDateChooser1.getDate());
        Date dt = new Date();
        dt = c.getTime();
        DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyy-MM-dd");
        DateTimeFormatter fmtnap = DateTimeFormat.forPattern("E");

        DateTime dtOrg = new DateTime(dt);
        String columneve = "";
        String szak = "";
        String napneve = "";
        TableColumn column = null;

        //napok szamaszor futtatjuk
        for (int i = 0; i < napok; i++) {

            //ha 12 órás a műszakrend 2 szer
            if (jComboBox1.getSelectedIndex() == 0) {
                for (int k = 0; k < 2; k++) {

                    szak = (k == 0) ? " DE" : " DU";
                    columneve = fmt.print(dtOrg.plusDays(i)) + szak;

                    napneve = fmtnap.print(dtOrg.plusDays(i));

                    model.addColumn(columneve + " " + napneve);

                }
            }

            //ha 8 órás 3 szor
            if (jComboBox1.getSelectedIndex() == 1) {
                for (int k = 0; k < 3; k++) {

                    if (k == 0) {

                        szak = " DE";

                    } else if (k == 1) {

                        szak = " DU";
                    } else {

                        szak = " ÉJJ";

                    }
                    columneve = fmt.print(dtOrg.plusDays(i)) + szak;
                    napneve = fmtnap.print(dtOrg.plusDays(i));
                    model.addColumn(columneve + " " + napneve);

                }
            }

        }
        //col szelesseg allitas

        for (int i = 0; i < Besheets.get(neve).jTable2.getModel().getColumnCount(); i++) {

            if (i != 3) {
                column = Besheets.get(neve).jTable2.getColumnModel().getColumn(i);
                column.setPreferredWidth(125);
            }

        }

        Besheets.get(neve).jTable2.setModel(model);
        //new FixedColumnTable(3, Besheets.get(neve).jScrollPane1);
        //Besheets.get(neve).jTable2.getTableHeader().setDefaultRenderer(new TervTablaRenderer());

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //aktuális sheet
        int n = jTabbedPane1.getSelectedIndex();
        String neve = jTabbedPane1.getTitleAt(n);
        //hozzaadjuk a sorokat
        DefaultTableModel t2 = new DefaultTableModel();
        t2 = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();
        int rownumber = t2.getRowCount();

        for (int i = 0; i < Integer.parseInt(jTextField1.getText()); i++) {

            t2.addRow(new Object[]{});

            if (rownumber + i % 2 == 0 || i == 0) {

                t2.setValueAt("Terv", rownumber + i, 3);

            } else {

                t2.setValueAt("Tény", rownumber + i, 3);
            }

        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //lekerjuk az infokat (pn , cell , ws , és a tervet )
        //cellak
        String query = "select * from tc_becells";
        planconnect pc = new planconnect();
        List<String[][]> gyujto = new ArrayList<String[][]>();

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] cellist = new String[last][2];

            while (pc.rs.next()) {

                cellist[i][0] = pc.rs.getString(1);
                cellist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(cellist);

        } catch (SQLException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

        //wsek
        query = "select * from tc_bestations";

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] wslist = new String[last][2];

            while (pc.rs.next()) {

                wslist[i][0] = pc.rs.getString(1);
                wslist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(wslist);

        } catch (SQLException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }

        //pnek
        query = "select * from tc_bepns";

        try {
            int i = 0;
            pc.planconnect(query);
            pc.rs.last();
            int last = pc.rs.getRow();
            pc.rs.beforeFirst();
            String[][] pnlist = new String[last][2];

            while (pc.rs.next()) {

                pnlist[i][0] = pc.rs.getString(1);
                pnlist[i][1] = pc.rs.getString(2);

                i++;

            }

            gyujto.add(pnlist);

        } catch (SQLException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Betervezo.class.getName()).log(Level.SEVERE, null, ex);
        }
        //kitalaljuk a sheet nevet
        int n = jTabbedPane1.getSelectedIndex();
        String neve = jTabbedPane1.getTitleAt(n);
        String tol = Besheets.get(neve).jTable2.getColumnName(4).substring(0, 10) + " 06:00:00";
        String ig = "";

        //tol ig intervallum a sheeten
        if (Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(11, 12).equals("É")) {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 22:00:00";

        } else {

            ig += Besheets.get(neve).jTable2.getColumnName(Besheets.get(neve).jTable2.getColumnCount() - 1).substring(0, 10) + " 18:00:00";

        }

        //megkeressuk az id -kat es vegigmegyunk a tablan , oszlop , sor
        DefaultTableModel t2 = new DefaultTableModel();
        t2 = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();
        int oszlopszam = t2.getColumnCount();  //t2 a tervtabla 
        int sorszam = t2.getRowCount();

        String pn = "";
        String ws = "";
        String cell = "";
        String job = "";
        String pnid = "";
        String wsid = "";
        String cellid = "";
        String feltoltadat = "";
        // elinditjuk a nagy ciklust ()
        for (int i = 0; i < oszlopszam; i++) {
            for (int r = 0; r < sorszam; r = r + 2) {

                pnid = "";
                wsid = "";
                job = "";

                if (t2.getValueAt(r, 0) != null) {
                    pn = t2.getValueAt(r, 0).toString();
                }
                if (t2.getValueAt(r, 1) != null) {
                    job = t2.getValueAt(r, 1).toString();
                }
                if (t2.getValueAt(r, 2) != null) {
                    ws = t2.getValueAt(r, 2).toString();
                }
                cell = neve;

                // megallapitjuk az id -kat (pn,cella,ws) a lekerdezeshez
                //pnid  
                for (int k = 0; k < gyujto.get(2).length; k++) {

                    if (pn.equals(gyujto.get(2)[k][1])) {

                        pnid = gyujto.get(2)[k][0];
                        break;

                    }

                }

                //wsid
                for (int k = 0; k < gyujto.get(1).length; k++) {

                    if (ws.equals(gyujto.get(1)[k][1])) {

                        wsid = gyujto.get(1)[k][0];
                        break;

                    }

                }

                //cellid
                for (int k = 0; k < gyujto.get(0).length; k++) {

                    if (cell.equals(gyujto.get(0)[k][1])) {

                        cellid = gyujto.get(0)[k][0];
                        break;

                    }

                }

                //megkeressuk a datumot
                //12 vagy 8 órás a terv?
                String beosztas = "";
                if (t2.getColumnName(t2.getColumnCount() - 1).substring(11, 12).equals("É")) {

                    beosztas = "8";

                } else {

                    beosztas = "12";

                }

                String datum = "";
                String ora = "";

                if (i > 3) {

                    if (t2.getColumnName(i).substring(11, 13).equals("DE")) {

                        ora = " 06:00:00";
                    }

                    if (t2.getColumnName(i).substring(11, 13).equals("DU") && beosztas.equals("12")) {

                        ora = " 18:00:00";
                    }

                    if (t2.getColumnName(i).substring(11, 13).equals("DU") && beosztas.equals("8")) {

                        ora = " 14:00:00";
                    }

                    if (t2.getColumnName(i).substring(11, 13).equals("ÉJ")) {

                        ora = " 22:00:00";
                    }

                    if (t2.getValueAt(r, i) != null && !t2.getValueAt(r, i).toString().equals("")) {

                        datum = t2.getColumnName(i).substring(0, 10) + ora;
                        String qty = t2.getValueAt(r, i).toString();
                        String qtyteny = (String) t2.getValueAt(r + 1, i);
                        try {
                            if (qtyteny == null) {
                                qtyteny = "0";
                            }
                        } catch (Exception e) {
                        };

                        feltoltadat += "('" + cellid + "','" + wsid + "','" + pnid + "','" + job + "','" + datum + "','" + qty + "','" + i * r + "'," + "'0'," + "'" + System.getProperty("user.name") + "'),";
                        feltoltadat += "('" + cellid + "','" + wsid + "','" + pnid + "','" + job + "','" + datum + "','" + qtyteny + "','" + (i * r + 1) + "'," + "'1'," + "'" + System.getProperty("user.name") + "'),";

                    }
                }

            }
        }

        feltoltadat = feltoltadat.substring(0, feltoltadat.length() - 1);

        //delet query
        String deletequery = "delete from tc_terv where tc_terv.active = 0 and tc_terv.idtc_becells = '" + cellid + "'";
        pc.feltolt(deletequery, false);

        //update 2-->1-->0
        String updatequery = "update tc_terv set active = CASE when tc_terv.active = 2 then 1 when tc_terv.active = 1 then 0 end where tc_terv.active in (2,1) and tc_terv.date between '" + tol + "' and '" + ig + "' and tc_terv.idtc_becells = '" + cellid + "'";
        pc.feltolt(updatequery, false);

        //feltoltjuk az adatokat
        String feltoltquery = "insert ignore tc_terv (tc_terv.idtc_becells , tc_terv.idtc_bestations , tc_terv.idtc_bepns , tc_terv.job , tc_terv.date , tc_terv.qty , tc_terv.wtf , tc_terv.tt , tc_terv.user) values" + feltoltadat;
        pc.feltolt(feltoltquery, true);


    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Betervezo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Betervezo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Betervezo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Betervezo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Betervezo().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
