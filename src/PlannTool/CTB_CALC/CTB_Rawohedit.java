/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool.CTB_CALC;

import static PlannTool.CTB_CALC.CTB.jTable1;
import PlannTool.GAME.jatek;
import PlannTool.selejt;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabor_hanacsek
 */
public class CTB_Rawohedit extends javax.swing.JFrame {

    private static ArrayList<Integer> sorok = new ArrayList<>();
    CTB c;
    private static String pn = "";

    /**
     * Creates new form CTB_Rawohedit
     */
    public CTB_Rawohedit(JTable j, CTB c) {

        initComponents();
        this.sorok.clear();
        this.c = c;
        c.ohedit = true;
        jTable2.setDefaultRenderer(Object.class, new CTB_Rawoheditrenderer());

        try {
            pn = j.getValueAt(j.getSelectedRow(), 0).toString();
        } catch (Exception e) {
        }

//végigtekerjük az OH táblát és az összes sort amiben egyezik a pn hozzáadjuk ehez a táblicskuhoz
//felengedjük a szűrőt
        if (!pn.equals("")) {
            DefaultTableModel model = new DefaultTableModel();
            DefaultTableModel ujmodel = new DefaultTableModel();
            CTB.jTable2.setRowSorter(null);
            model = (DefaultTableModel) CTB.jTable2.getModel();
            ujmodel = (DefaultTableModel) jTable2.getModel();
            ujmodel.setRowCount(0);
            ArrayList<Integer> sorok = new ArrayList<>();
            for (int i = 0; i < model.getRowCount(); i++) {

                if (model.getValueAt(i, 2).toString().equals(pn)) {
//találatkor elrakjuk a sor számát , hogy a módosításokat abban tudjuk megtenni
                    this.sorok.add(i);
                    ujmodel.addRow(new Object[]{model.getValueAt(i, 0), model.getValueAt(i, 1), model.getValueAt(i, 2), model.getValueAt(i, 3), model.getValueAt(i, 4), model.getValueAt(i, 5), model.getValueAt(i, 6), model.getValueAt(i, 10), model.getValueAt(i, 8), model.getValueAt(i, 9)});

                }

            }

            this.jTable2.setModel(ujmodel);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OH Edit");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Warehouse", "Location", "Part", "Site ", "Type", "Date", "Quantity", "Master comment", "Unit Cost", "Inventory Store", "Part Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setCellSelectionEnabled(true);
        jTable2.setName("OH_Table"); // NOI18N
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButton1.setText("Set");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(797, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 93, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(0, 470, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //a set gomb megnyomása
//kiszedjük az editálást

        if (this.jTable2.isEditing()) {
            this.jTable2.getCellEditor().stopCellEditing();
        }

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) CTB.jTable2.getModel();
        DefaultTableModel ujmodel = new DefaultTableModel();
        ujmodel = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < this.sorok.size(); i++) {

            model.setValueAt(ujmodel.getValueAt(i, 6), this.sorok.get(i), 6);
            model.setValueAt(ujmodel.getValueAt(i, 7), this.sorok.get(i), 10);

        }

        CTB.jTable2.setModel(model);

        c.Ohcalc(0);
        c.CompToCtb();
        c.CtbKalk();
        c.NeedToBuild();
        c.TablaOszlopSzelesseg(jTable1);
        c.ohedit = false;
        c.jTable1.changeSelection(c.selectedrow, c.selectedcolumn, false, false);
        c.jTable1.requestFocus();
        CTB_TopshortThread t = new CTB_TopshortThread();
        t.start();
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        c.ohedit = false;
    }//GEN-LAST:event_formWindowClosing

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //a plusz sor létrehozása miatt fel kell vennünk pár kötelező adatot

        Object[] options = {"Net-Asset", "Net-NonAsset"};
        JComboBox optionList = new JComboBox(options);
        optionList.setSelectedIndex(0);
        JOptionPane.showMessageDialog(null, optionList, "Kérlek válassz!",
                JOptionPane.QUESTION_MESSAGE);
        String net = optionList.getSelectedItem().toString();

//stage vagy wip , ez kell , hogy ha csak stagere szűrünk akkor ne hozza a wip es sort
        Object[] options2 = {"Stage", "WIP"};
        optionList = new JComboBox(options2);
        optionList.setSelectedIndex(0);
        JOptionPane.showMessageDialog(null, optionList, "Kérlek válassz!",
                JOptionPane.QUESTION_MESSAGE);
        String loki = optionList.getSelectedItem().toString();

//bekérjük a pn-t
        String part = "";

        while (part.equals("")) {

            part = JOptionPane.showInputDialog(this, "Add meg a PN-t", this.pn);

        }

//bekérjük a darabot
        boolean qtye = false;
        int qty = 0;

        while (!qtye) {

            try {
                qty = Integer.parseInt(JOptionPane.showInputDialog(
                        this,
                        "Add meg a darabszámot",
                        "Quantity",
                        JOptionPane.QUESTION_MESSAGE));
                qtye = true;
            } catch (Exception e) {
            }

        }

//bekérünk master commentet
        String comment = JOptionPane.showInputDialog(
                this,
                "Master Comment",
                "Comment",
                JOptionPane.WARNING_MESSAGE);

//be kell kérni a darabot
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) c.jTable2.getModel();

        model.addRow(new Object[]{loki, "", part, "", net, "", qty, "", "", "", comment});
        c.jTable2.setModel(model);

        c.Ohcalc(0);
        c.CompToCtb();
        c.CtbKalk();
        c.NeedToBuild();
        c.TablaOszlopSzelesseg(jTable1);
        c.ohedit = false;
        c.jTable1.changeSelection(c.selectedrow, c.selectedcolumn, false, false);
        c.jTable1.requestFocus();
        CTB_TopshortThread t = new CTB_TopshortThread();
        t.start();
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CTB_Rawohedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CTB_Rawohedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CTB_Rawohedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CTB_Rawohedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new CTB_Rawohedit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
