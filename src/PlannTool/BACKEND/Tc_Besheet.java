/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool.BACKEND;

import PlannTool.ExcelAdapter;
import PlannTool.ablak;
import PlannTool.infobox;
import PlannTool.CONNECTS.planconnect;
import static PlannTool.BACKEND.Tc_Betervezo.Besheets;
import static PlannTool.BACKEND.Tc_Betervezo.c;
import static PlannTool.BACKEND.Tc_Betervezo.first;
import static PlannTool.BACKEND.Tc_Betervezo.one;
import static PlannTool.BACKEND.Tc_Betervezo.second;
import static PlannTool.BACKEND.Tc_Betervezo.two;
import java.awt.Component;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.text.MessageFormat;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import org.joda.time.format.DateTimeFormat;

/**
 *
 * @author gabor_hanacsek
 */
public class Tc_Besheet extends javax.swing.JPanel {

    public List<String[]> partnumbers = new ArrayList<String[]>();
    public List<String> workstations = new ArrayList<String>();
    //it tároljuk a jobok sfdc adatait
    public List<String[][]> jobadat = new ArrayList<String[][]>();
    //ez az azonos jobok megkereséséhez kell a renderernek
    public String jobaszinezeshez = "";

//a tervtabla adatai tarolasara szolgalo tomb
    Tc_CellClass[][] tablaadat;

    public String adat;
//ez a tömb fogja tartalmazni azt az adatot , hogy az adott partnumbereket mikor gyártottuk utoljára
    public String[][]utsogyartasok = null;

    public Tc_Besheet(Tc_Betervezo b) throws SQLException, ClassNotFoundException {

        initComponents();

        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        new ExcelAdapter(jTable2);
        this.jTable2.getTableHeader().setDefaultRenderer(new Tc_TervTablaRenderer());
        this.jTable2.setDefaultRenderer(Object.class, new Tc_TervTooltipRenderer(this));

        //letiltjuk a terv mentése gombot ha a planner false
        if (!ablak.planner && ablak.muvez) {

            jButton10.setEnabled(false);
            DeleteRow.setEnabled(false);
            Mernoki.setEnabled(false);
            Szinezo.setEnabled(false);
            jButton11.setEnabled(true);

        } //letiltjuk a teny menteset ha planner van bent
        else if (ablak.planner) {

            jButton11.setEnabled(false);
            DeleteRow.setEnabled(true);
            Mernoki.setEnabled(true);
            Szinezo.setEnabled(true);
            jButton10.setEnabled(true);
            //ha se nem planner se nem muvez
        } else if (!ablak.planner && !ablak.muvez) {

            jButton10.setEnabled(false);
            DeleteRow.setEnabled(false);
            Mernoki.setEnabled(false);
            Szinezo.setEnabled(false);
            jButton11.setEnabled(false);

        }

//beállítjuk a betűméretet és stílust
        jTable2.setFont(new Font(Tc_Betervezo.fstyle, Font.PLAIN, Integer.parseInt(Tc_Betervezo.fs)));

//beállítjuk a jlabelt a felhasznalonak
        jLabel7.setText(ablak.user);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPopupMenu1 = new javax.swing.JPopupMenu();
        Szinezo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        kereses = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        CellaAdatok = new javax.swing.JMenuItem();
        DeleteArea = new javax.swing.JMenuItem();
        MuveletekSorokkal = new javax.swing.JMenu();
        InsertRow = new javax.swing.JMenuItem();
        DeleteRow = new javax.swing.JMenuItem();
        SFDCmuveletek = new javax.swing.JMenu();
        SFDClekeres = new javax.swing.JMenuItem();
        SFDCall = new javax.swing.JMenuItem();
        Termekleker = new javax.swing.JMenuItem();
        pnkarbantarto = new javax.swing.JMenuItem();
        Mernoki = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        anyaghianyfelv = new javax.swing.JMenuItem();
        ahkezel = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        allasidofelv = new javax.swing.JMenuItem();
        allkezel = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        JPopupMenu1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JPopupMenu1PropertyChange(evt);
            }
        });

        Szinezo.setText("Színező!");
        Szinezo.setEnabled(false);
        Szinezo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SzinezoActionPerformed(evt);
            }
        });
        Szinezo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SzinezoPropertyChange(evt);
            }
        });
        JPopupMenu1.add(Szinezo);
        JPopupMenu1.add(jSeparator1);

        kereses.setText("Keresés a kijelölt cellára!");
        kereses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keresesActionPerformed(evt);
            }
        });
        JPopupMenu1.add(kereses);
        JPopupMenu1.add(jSeparator5);

        CellaAdatok.setText("Elérhető PN / WS");
        CellaAdatok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CellaAdatokActionPerformed(evt);
            }
        });
        JPopupMenu1.add(CellaAdatok);

        DeleteArea.setText("Terület törlése");
        DeleteArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAreaActionPerformed(evt);
            }
        });
        JPopupMenu1.add(DeleteArea);

        MuveletekSorokkal.setText("Sor +/-");
        MuveletekSorokkal.setActionCommand("Sor + / -");
        MuveletekSorokkal.setAutoscrolls(true);

        InsertRow.setText("Sor beszúrása");
        InsertRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(InsertRow);

        DeleteRow.setText("Sor törlése");
        DeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowActionPerformed(evt);
            }
        });
        MuveletekSorokkal.add(DeleteRow);

        JPopupMenu1.add(MuveletekSorokkal);

        SFDCmuveletek.setText("Műveletek az SFDC vel:");

        SFDClekeres.setText("SFDC lekérés");
        SFDClekeres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDClekeresActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDClekeres);

        SFDCall.setText("SFDC lekérése az összes cellára!");
        SFDCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFDCallActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(SFDCall);

        Termekleker.setText("Termék a szakban!");
        Termekleker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TermeklekerActionPerformed(evt);
            }
        });
        SFDCmuveletek.add(Termekleker);

        JPopupMenu1.add(SFDCmuveletek);

        pnkarbantarto.setText("PN karbantartó");
        pnkarbantarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnkarbantartoActionPerformed(evt);
            }
        });
        JPopupMenu1.add(pnkarbantarto);

        Mernoki.setText("Mérnöki gyártás!");
        Mernoki.setEnabled(false);
        Mernoki.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                MernokiComponentShown(evt);
            }
        });
        Mernoki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MernokiActionPerformed(evt);
            }
        });
        Mernoki.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MernokiPropertyChange(evt);
            }
        });
        JPopupMenu1.add(Mernoki);
        JPopupMenu1.add(jSeparator6);

        jMenu1.setText("Anyaghiányok kezelése");

        anyaghianyfelv.setText("Anyaghiány felvétele");
        anyaghianyfelv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anyaghianyfelvActionPerformed(evt);
            }
        });
        jMenu1.add(anyaghianyfelv);

        ahkezel.setText("Anyaghiányok lekérdezése , törlése");
        ahkezel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ahkezelActionPerformed(evt);
            }
        });
        jMenu1.add(ahkezel);

        JPopupMenu1.add(jMenu1);

        jMenu2.setText("Állásidők kezelése");

        allasidofelv.setText("Állásidő felvétele");
        allasidofelv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allasidofelvActionPerformed(evt);
            }
        });
        jMenu2.add(allasidofelv);

        allkezel.setText("Állásidők lekérdezése , törlése");
        allkezel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allkezelActionPerformed(evt);
            }
        });
        jMenu2.add(allkezel);

        JPopupMenu1.add(jMenu2);

        setComponentPopupMenu(JPopupMenu1);
        setPreferredSize(new java.awt.Dimension(1800, 700));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(453, 453));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PartNumber", "Job", "WorkStation", "Terv/Tény"
            }
        ));
        jTable2.setCellSelectionEnabled(true);
        jTable2.setComponentPopupMenu(JPopupMenu1);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jTable2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable2PropertyChange(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(130);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1794, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel6.setText("Kereső:");

        jTextField1.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextField1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField1MouseExited(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/PICTURES/email_kicsi.png"))); // NOI18N
        jButton7.setToolTipText("Műszakjelentés küldése");
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setMinimumSize(new java.awt.Dimension(10, 10));
        jButton7.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setAlignmentX(0.0F);
        jSeparator2.setAlignmentY(0.0F);
        jSeparator2.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(5, 20));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel1.setText("Nincs elküldve!");
        jLabel1.setMaximumSize(new java.awt.Dimension(71, 20));

        jButton11.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/PICTURES/upload_kicsi.png"))); // NOI18N
        jButton11.setToolTipText("Tény mentése!");
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.setMinimumSize(new java.awt.Dimension(48, 10));
        jButton11.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel3.setText("Nincs mentve!");
        jLabel3.setPreferredSize(new java.awt.Dimension(67, 20));

        jButton8.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/PICTURES/plan_kicsi.png"))); // NOI18N
        jButton8.setToolTipText("Terv lekérése!");
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setMinimumSize(new java.awt.Dimension(10, 10));
        jButton8.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        jSeparator3.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jSeparator3.setPreferredSize(new java.awt.Dimension(5, 20));

        jCheckBox2.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jCheckBox2.setText("Group PN");
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jCheckBox4.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jCheckBox4.setText("Kalkulátor ablak:");
        jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jCheckBox1.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 0, 4));
        jCheckBox1.setText("42Q First pass only");
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox3.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 0, 4));
        jCheckBox3.setText("42Q Group by JOB");
        jCheckBox3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setAlignmentX(0.0F);
        jSeparator4.setAlignmentY(0.0F);
        jSeparator4.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jSeparator4.setPreferredSize(new java.awt.Dimension(5, 20));

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel2.setText("Nincs mentve!");
        jLabel2.setPreferredSize(new java.awt.Dimension(67, 20));

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel4.setText("Terv/Tény sor +");
        jLabel4.setPreferredSize(new java.awt.Dimension(73, 20));

        jTextField2.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jTextField2.setMinimumSize(new java.awt.Dimension(12, 10));
        jTextField2.setPreferredSize(new java.awt.Dimension(12, 20));

        jButton4.setFont(new java.awt.Font("sansserif", 0, 8)); // NOI18N
        jButton4.setText("+");
        jButton4.setMinimumSize(new java.awt.Dimension(33, 10));
        jButton4.setPreferredSize(new java.awt.Dimension(33, 20));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PlannTool/PICTURES/save_kicsi.png"))); // NOI18N
        jButton10.setToolTipText("Terv mentése!");
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setMinimumSize(new java.awt.Dimension(10, 10));
        jButton10.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton10.setVerifyInputWhenFocusTarget(false);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel5.setText("Üdv");
        jLabel5.setPreferredSize(new java.awt.Dimension(18, 20));

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel7.setText("Ismeretlen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox1)
                        .addComponent(jCheckBox4)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox3))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, jLabel6, jLabel7, jTextField1});

    }// </editor-fold>//GEN-END:initComponents

    public void parts() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "select tc_bepns.partnumber ,pn_data.Project ,pn_data.Comment from tc_bepns \n"
                + "left join tc_prodmatrix on tc_prodmatrix.id_tc_bepns = tc_bepns.idtc_bepns\n"
                + "left join tc_becells on tc_prodmatrix.id_tc_becells = tc_becells.idtc_cells\n"
                + "left join pn_data on pn_data.PartNumber = tc_bepns.partnumber\n"
                + "where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'";

        pc.lekerdez(query);

            while (pc.rs.next()) {

            String[] pnadatok = new String[3];

            pnadatok[0] = pc.rs.getString(1);
            pnadatok[1] = pc.rs.getString(2);
            pnadatok[2] = pc.rs.getString(3);

            partnumbers.add(pnadatok);

        }

        pc.kinyir();

    }

    public void workstations() throws SQLException, ClassNotFoundException {

        planconnect pc = new planconnect();
        String query = "SELECT tc_bestations.workstation  from tc_bestations where tc_bestations.idtc_bestations in \n"
                + "(select distinct tc_prodmatrix.id_tc_bestations from tc_prodmatrix where tc_prodmatrix.id_tc_becells  = \n"
                + "(SELECT tc_becells.idtc_cells FROM planningdb.tc_becells where tc_becells.cellname = '" + Tc_Cellavalaszto.neve + "'))";

        pc.lekerdez(query);

        while (pc.rs.next()) {

            workstations.add(pc.rs.getString(1));

        }

        pc.kinyir();

    }

    private void DeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowActionPerformed

        this.jTable2.revalidate();
        this.jTable2.invalidate();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) this.jTable2.getModel();

        //meg kell szamolni az info sorokat
        int infsor = 0;

        for (int i = 0; i < model.getRowCount(); i++) {

            if (model.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        int r = this.jTable2.convertRowIndexToModel(this.jTable2.getSelectedRow());
        try {
            if (this.jTable2.getValueAt(r, 3).toString().equals("Terv")) {

                Tc_AdatInterface a = new Tc_AdatInterface(this);
                a.adatbatoltsortorol(r - infsor, r + 1 - infsor);

            } else {

                Tc_AdatInterface a = new Tc_AdatInterface(this);
                a.adatbatoltsortorol(r - infsor, r - 1 - infsor);

            }
        } catch (Exception e) {
        }

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.tablabatolt();
        Tc_Calculator calc = new Tc_Calculator(this, false, 0);
        calc.run();

    }//GEN-LAST:event_DeleteRowActionPerformed

    private void DeleteAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAreaActionPerformed

        int rows[] = this.jTable2.getSelectedRows();
        int columns[] = this.jTable2.getSelectedColumns();

        for (int i = 0; i < rows.length; i++) {

            for (int n = 0; n < columns.length; n++) {

                this.jTable2.setValueAt(null, rows[i], columns[n]);

            }

        }

    }//GEN-LAST:event_DeleteAreaActionPerformed

    private void CellaAdatokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CellaAdatokActionPerformed

        Tc_PartsOfCells p = new Tc_PartsOfCells(this);
        p.setVisible(true);

    }//GEN-LAST:event_CellaAdatokActionPerformed

    private void InsertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertRowActionPerformed
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) this.jTable2.getModel();

        int r = this.jTable2.convertRowIndexToModel(this.jTable2.getSelectedRow());

        //meg kell szamolni az info sorokat
        int infsor = 0;

        for (int i = 0; i < model.getRowCount(); i++) {

            if (model.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        try {
            if (this.jTable2.getValueAt(r, 3).toString().equals("Terv")) {

                try {

                    Tc_AdatInterface a = new Tc_AdatInterface(this);
                    a.adatbatoltbeszursor(r + 2 - infsor, r + 3 - infsor);

                } catch (Exception e) {
                }

            }
            if (this.jTable2.getValueAt(r, 3).toString().equals("Tény")) {

                try {
                    Tc_AdatInterface a = new Tc_AdatInterface(this);
                    a.adatbatoltbeszursor(r + 1 - infsor, r + 2 - infsor);

                } catch (Exception e) {
                }

            }
        } catch (Exception e) {
        }

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.tablabatolt();

        Tc_Calculator calc = new Tc_Calculator(this, false, 0);
        calc.run();
    }//GEN-LAST:event_InsertRowActionPerformed

    private void SFDClekeresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDClekeresActionPerformed

        //sfdc lekeres
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        a.start();
        Tc_SFDCszal1 sz = new Tc_SFDCszal1(this);
        sz.start();

    }//GEN-LAST:event_SFDClekeresActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String query = jTextField1.getText().trim();
        filter(query, this);

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseEntered
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextField1MouseEntered

    private void jTextField1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1MouseExited

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //email kuldes

        Tc_Muszakjelentes m;
        try {
            m = new Tc_Muszakjelentes(this);
            m.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
//visszaallitjuk a nezetvaltas figyelojet

        Tc_Betervezo.nezetvaltas = true;

        //lefuttatjuk az össztervlekért
        //eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
        Tc_Tervvaltozasellenor.tervellenor.clear();
        Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
        try {
            t.leker();
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

        //ciklust indítunk és végrehajtjuk a lekért cellákon a dátum beállítást
        //bepakoljuk a maptree be a sheeteket ujból
        Tc_Betervezo.Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Tc_Betervezo.Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        int napok = 0;

        Tc_Napszamolo nap = new Tc_Napszamolo();
        if (!first.equals("") && !second.equals("")) {
            napok = nap.daysBetweenUsingJoda(one, two);
        }

        //oszlopok neve a datumbol
        Date dt = new Date();
        dt = c.getTime();
        org.joda.time.format.DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyy-MM-dd");
        org.joda.time.format.DateTimeFormatter fmtnap = DateTimeFormat.forPattern("E");

//letrehozunk egy megfelelo jtablet
//most indítjuk a nagy ciklust amiben végigpörgetjük a sheeteket
        for (int b = 0; b < Tc_Betervezo.Tervezotabbed.getTabCount(); b++) {

            Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(b), "groupleker");

        }

        Tc_Calculator calc = new Tc_Calculator(Tc_Betervezo.Besheets.get(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex())), false, 0);
        calc.run();

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
//terv mentése

//kitoroljuk a szurot
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(""));
        jTextField1.setText("");

//leellenőrizzük , hogy változtatta e valaki a tervet (nem egyezik a getproperty az adatbazisban szereplo nevvel)
        planconnect pc = new planconnect();

        String query = "select tc_terv.user , perm.job_positions_id , tc_terv.idtc_terv , tc_terv.timestamp \n"
                + "from tc_terv\n"
                + "left join perm on perm.system = tc_terv.user\n"
                + "where tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "') and tc_terv.active = 2 and tc_terv.tt = '3' \n"
                + "order by tc_terv.timestamp desc , tc_terv.idtc_terv desc limit 1";

        try {
            pc.lekerdez(query);

            while (pc.rs.next()) {

//ha nem egyezik a rendszernev a tervben szereplo nevvel es planneri joga van
                try {
                    if (!pc.rs.getString(1).equals(ablak.user) && (pc.rs.getString(2).equals("1") || pc.rs.getString(2).equals("2") || pc.rs.getString(2).equals("4"))) {

//kiirjuk az infot hogy ki változtatta a tervét utoljára és felajánljuk hogy letöltsük a változást vagy figyelmen kívül hagyjuk és akkor az a változtatás elvész
                        String[] buttons = {"Lekérem a változást!  :) ", "Felülírom azt a tervet!  :( "};
                        int rc = JOptionPane.showOptionDialog(null, "A tervet utoljára " + pc.rs.getString(1) + " módosította ekkor: " + pc.rs.getString(4) + "! Ha rámentesz az ő módosításai elvesznek!", "Figyelem!",
                                JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[0]);

                        if (rc == 0) {

// ez itt a terv lekeres
//eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
                            Tc_Tervvaltozasellenor.tervellenor.clear();
                            Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
                            try {
                                t.leker();
                            } catch (SQLException ex) {
                                Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
                            }

//eltesszuk az oszlop szelessegeket
                            Tc_Betervezo.szelessegek.clear();
                            for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

                                Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

                            }

// terv lekérése
                            Besheets.clear();
                            for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

                                String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

                                Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

                            }

                            Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "mentes");

//updateljuk a nevet a tervben , hogy ne legyen legkozelebb ilyen gond
                            query = "update tc_terv set tc_terv.user = '" + ablak.user + "' where tc_terv.idtc_becells = (select tc_becells.idtc_cells from tc_becells \n"
                                    + "where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "') and tc_terv.active = 2 and tc_terv.tt = '3' \n"
                                    + "order by tc_terv.timestamp desc , tc_terv.idtc_terv desc limit 1";
                            pc.feltolt(query, false);

//es vegül megszakítjuk a futást
                            return;

                        }

                    }
                } catch (Exception e) {
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

//leellenőrizzük , hogy van e olyan pn vagy ws a tervben ami nincs az adatbázisban , és ha van figyelmeztetünk , hogy az el fog veszni
//ebben taroljuk le a hibas adatokat
        String hibalista = "";
//vegigporgetjuk a sorokat
        for (int i = 0; i < jTable2.getRowCount(); i++) {
// ha terv sorban vagyunk és van is bele írva valami
            try {
                if (jTable2.getValueAt(i, 3).toString().equals("Terv") && jTable2.getValueAt(i, 0) != null && !jTable2.getValueAt(i, 0).toString().equals("")) {

                    String pn = jTable2.getValueAt(i, 0).toString();
                    String ws = jTable2.getValueAt(i, 2).toString();
                    boolean vanepn = false;
                    boolean vanews = false;

//vegigporgetjuk a pn listet
                    for (int r = 0; r < Tc_Betervezo.partn.size(); r++) {

//ha megtalaljuk kiugrunk a ciklusbol
                        if (Tc_Betervezo.partn.get(r).equals(pn)) {

                            vanepn = true;
                            break;

                        } else {

                        }

                    }

                    if (vanepn == false) {

                        hibalista += pn + ",";

                    }

//vegigporgetjuk a ws listát is
                    vanews = false;
                    for (int r = 0; r < Tc_Betervezo.works.size(); r++) {

//ha megtalaljuk kiugrunk a ciklusbol
                        if (Tc_Betervezo.works.get(r).equals(ws)) {

                            vanews = true;
                            break;

                        } else {

                        }

                    }

                    if (vanews == false) {

                        hibalista += ws + ",";

                    }

                }
            } catch (Exception e) {
            }

        }

// ha a hibalista nagyobb mint nulla akkor baj van , cselekszunk
        if (hibalista.length() > 0) {

            hibalista = hibalista.substring(0, hibalista.length() - 1);

            String[] buttons = {"Jóvanazúgy!", "Pótolom a setupban!"};
            int rc = JOptionPane.showOptionDialog(null, "A tervben szereplő , de adatbázisban nem fellelhető tételek: " + hibalista + " Ezek nem kerülnek elmentésre!", "Figyelem!",
                    JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[1]);

            if (rc == 1) {

                return;
            }

        }

//mentjuk a tervet
        Tc_Ment ment = new Tc_Ment();

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel2.setText("Mentve: " + df.format(dateobj));

//visszakerdezzuk a tervet , hogy lassuk mit csinaltunk
//eltesszuk az oszlop szelessegeket
        Tc_Betervezo.szelessegek.clear();
        for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "mentes");

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        //kitoroljuk a szurot
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);

        jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(""));
        jTextField1.setText("");

        //le kell ellenőrizni , hogy változott e a terv az eddigiekhez képesT
        //lekerjuk a cellahoz tartozo utolso id-t
        String query = "select max(tc_terv.timestamp) as id , tc_becells.cellname  \n"
                + "from tc_terv \n"
                + "left join tc_becells on tc_becells.idtc_cells = tc_terv.idtc_becells \n"
                + "where tc_becells.cellname = '" + Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()) + "' and tc_terv.tt = 3";

        //az eredmenyt összevetjuk a tervellenorrel
        //ez lesz a valtozonk hogy irhatunk e
        boolean valtozott = true;
        planconnect pc = new planconnect();
        String id = "";
        try {
            pc.lekerdez(query);
            while (pc.rs.next()) {

                id = pc.rs.getString(1);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

        //osszenezzuk a tervellenor adatat a most lekertel
        for (int i = 0; i < Tc_Tervvaltozasellenor.tervellenor.get(0)[0].length; i++) {

            if (Tc_Tervvaltozasellenor.tervellenor.get(0)[0][i].toString().equals(id)) {

                valtozott = false;

            }

        }

        //ha valtozott kiirjuk az uzit es megszakitjuk a metodus futását
        if (valtozott == true) {

            infobox info = new infobox();
            info.infoBox("Változott a terv! Kérd le újból!", "Terv változás!");
            return;
        }

        Tc_Ment ment = new Tc_Ment();

        //beirjuk az infot a jlabelbe hogy mikor lett mentve
        DateFormat df = new SimpleDateFormat("HH:mm");
        Date dateobj = new Date();
        jLabel3.setText("Mentve: " + df.format(dateobj));
        //this.dispose();

        //frissitjuk a tervvaltozas ellenort
//visszakerdezzuk a tervet hogy lassuk jol sikerult e a mentes
//eltesszuk az adatokat az ellenorzeshez , hogy valtozott e a terv
        Tc_Tervvaltozasellenor.tervellenor.clear();
        Tc_Tervvaltozasellenor t = new Tc_Tervvaltozasellenor();
        try {
            t.leker();
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }

//eltesszuk az oszlop szelessegeket
        Tc_Betervezo.szelessegek.clear();
        for (int i = 0; i < this.jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(this.jTable2.getColumnModel().getColumn(i).getWidth());

        }

// terv lekérése
        Besheets.clear();
        for (int i = 0; i < Tc_Betervezo.Tervezotabbed.getTabCount(); i++) {

            String name = Tc_Betervezo.Tervezotabbed.getTitleAt(i);

            Besheets.put(name, (Tc_Besheet) Tc_Betervezo.Tervezotabbed.getComponentAt(i));

        }

        Tc_Leker leker = new Tc_Leker(Tc_Betervezo.Tervezotabbed.getTitleAt(Tc_Betervezo.Tervezotabbed.getSelectedIndex()), "termelesment");

    }//GEN-LAST:event_jButton11ActionPerformed

    private void SFDCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFDCallActionPerformed
        // sfdc lekerese az osszes szakra
        Tc_osszsfdccellabol o = new Tc_osszsfdccellabol(this);
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        o.start();
        a.start();

    }//GEN-LAST:event_SFDCallActionPerformed

    private void TermeklekerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TermeklekerActionPerformed
        // TODO add your handling code here:
        Tc_AnimationSFDC a = new Tc_AnimationSFDC();
        a.start();
        Tc_Termekleker t = new Tc_Termekleker(this);
        t.start();

    }//GEN-LAST:event_TermeklekerActionPerformed

    private void jScrollPane2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseMoved
        // TODO add your handling code here:
        jTable2.repaint();
    }//GEN-LAST:event_jScrollPane2MouseMoved

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // kalkulátort lefuttatjuk
        try {
            if ((jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") || jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Tény")) && jTable2.getValueAt(jTable2.getSelectedRow() - 1, 3).toString().equals("Infó") && jTable2.getSelectedColumn() > 3) {

                Tc_Calculator c = new Tc_Calculator(this, true, jTable2.getSelectedRow());
                c.run();

            } else if (jTable2.getSelectedColumn() > 3) {

                Tc_Calculator c = new Tc_Calculator(this, false, jTable2.getSelectedRow());
                c.run();

            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void keresesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keresesActionPerformed
        // TODO add your handling code here:
        try {
            jTextField1.setText(jTable2.getValueAt(jTable2.getSelectedRow(), jTable2.getSelectedColumn()).toString());
        } catch (Exception e) {

            jTextField1.setText("");

        }
        String query = jTextField1.getText().trim();
        filter(query, this);

    }//GEN-LAST:event_keresesActionPerformed

    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        // TODO add your handling code here:

        Tc_Betervezo.csuk = false;
        Tc_Calculator c = new Tc_Calculator(this, false, 0);
        c.run();

    }//GEN-LAST:event_jTable2KeyPressed

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased

        Tc_Betervezo.csuk = false;
        Tc_Calculator c = new Tc_Calculator(this, false, 0);
        c.run();

    }//GEN-LAST:event_jTable2KeyReleased

    private void jTable2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable2PropertyChange

        Tc_Betervezo.csuk = true;

        Tc_Betervezo.szelessegek.clear();

        for (int i = 0; i < jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(jTable2.getColumnModel().getColumn(i).getWidth());

        }

        if (Tc_Betervezo.csuk == false) {
            Tc_Calculator c = new Tc_Calculator(this, false, 0);
            c.run();
        }

    }//GEN-LAST:event_jTable2PropertyChange

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:

        Tc_Betervezo.szelessegek.clear();

        for (int i = 0; i < jTable2.getColumnCount(); i++) {

            Tc_Betervezo.szelessegek.add(jTable2.getColumnModel().getColumn(i).getWidth());

        }

        Tc_Calcablakszal c = new Tc_Calcablakszal(this, Tc_Betervezo.calculatorablaktarolo.get(0));
        c.start();

    }//GEN-LAST:event_jTable2MouseReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void pnkarbantartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnkarbantartoActionPerformed

        //példányosítunk egy pnkarbit és átadjuk neki a cella értékét amiből indítjuk
        try {
            Tc_Pnkarbantarto p = new Tc_Pnkarbantarto(jTable2.getValueAt(jTable2.getSelectedRow(), jTable2.getSelectedColumn()).toString());
            p.setVisible(true);
        } catch (Exception e) {

            Tc_Pnkarbantarto p = new Tc_Pnkarbantarto("");
            p.setVisible(true);

        }


    }//GEN-LAST:event_pnkarbantartoActionPerformed

    private void MernokiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MernokiActionPerformed
        // TODO add your handling code here:

        Tc_AdatInterface a = new Tc_AdatInterface(this);
        a.mernoki();

        //ha nincs bekapcsolva a mernoki akkor jelenitjuk csak meg az ido beallitast
        int infsor = 0;

        for (int i = 0; i < jTable2.getRowCount(); i++) {

            if (jTable2.getValueAt(i, 3).toString().equals("Infó")) {

                infsor++;

            }

        }

        try {
            if (tablaadat[jTable2.getSelectedRow() - infsor][jTable2.getSelectedColumn()].eng == 1) {
                Tc_Mernokiido i = new Tc_Mernokiido(this);
                i.setVisible(true);
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_MernokiActionPerformed

    private void MernokiComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MernokiComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_MernokiComponentShown

    private void MernokiPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MernokiPropertyChange
        // TODO add your handling code here:
        try {
            if (!jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv")) {

                Mernoki.setEnabled(false);

            } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") && ablak.planner) {

                Mernoki.setEnabled(true);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_MernokiPropertyChange

    private void SzinezoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SzinezoActionPerformed

        Tc_Szinezo sz = new Tc_Szinezo(this);
        sz.setVisible(true);

    }//GEN-LAST:event_SzinezoActionPerformed

    private void SzinezoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SzinezoPropertyChange
        try {
            if (!jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv")) {

                Szinezo.setEnabled(false);

            } else if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv") && ablak.planner) {

                Szinezo.setEnabled(true);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_SzinezoPropertyChange

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //aktuális sheet
        int n = Tc_Betervezo.Tervezotabbed.getSelectedIndex();
        String neve = Tc_Betervezo.Tervezotabbed.getTitleAt(n);
        //hozzaadjuk a sorokat
        DefaultTableModel t2 = new DefaultTableModel();
        t2 = (DefaultTableModel) Besheets.get(neve).jTable2.getModel();

        for (int i = 0; i < Integer.parseInt(jTextField2.getText()); i++) {

            t2.addRow(new Object[]{null, null, null, "Terv"});
            t2.addRow(new Object[]{null, null, null, "Tény"});

        }

        Besheets.get(neve).jTable2.setModel(t2);

        //betesszuk a tablabol az adatokat a tablatombbe
        Tc_AdatInterface a = new Tc_AdatInterface(Besheets.get(neve));
        a.adatbatoltpluszsor();

        //es az adatokat a tablaba
        a.tablabatolt();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void anyaghianyfelvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anyaghianyfelvActionPerformed
        try {
            // anyaghiany megnyitasa
            Tc_AnyaghianyRogzito a;

            a = new Tc_AnyaghianyRogzito(this);

            a.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_anyaghianyfelvActionPerformed

    private void allasidofelvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allasidofelvActionPerformed
        //allasido
        Tc_AllasidoRogzito a = new Tc_AllasidoRogzito(this);
        a.setVisible(true);
    }//GEN-LAST:event_allasidofelvActionPerformed

    private void ahkezelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ahkezelActionPerformed
        try {
            // ahkezel
            Tc_AhkezelForm a = new Tc_AhkezelForm(this);
            a.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ahkezelActionPerformed

    private void allkezelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allkezelActionPerformed
        //allkezel
        Tc_AllkezelForm a = null;
        try {
            a = new Tc_AllkezelForm(this);
        } catch (SQLException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Besheet.class.getName()).log(Level.SEVERE, null, ex);
        }
        a.setVisible(true);
    }//GEN-LAST:event_allkezelActionPerformed

    private void JPopupMenu1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JPopupMenu1PropertyChange
        // ha terv részen vagyunk letiltjuk az anyagos és állásidős cuccot

        if (jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString().equals("Terv")) {

            jMenu1.setEnabled(false);
            jMenu2.setEnabled(false);

        } else {

            jMenu1.setEnabled(true);
            jMenu2.setEnabled(true);

        }


    }//GEN-LAST:event_JPopupMenu1PropertyChange

    private void filter(String query, Tc_Besheet b) {

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) b.jTable2.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        b.jTable2.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(query));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CellaAdatok;
    private javax.swing.JMenuItem DeleteArea;
    public javax.swing.JMenuItem DeleteRow;
    private javax.swing.JMenuItem InsertRow;
    public javax.swing.JPopupMenu JPopupMenu1;
    public javax.swing.JMenuItem Mernoki;
    private javax.swing.JMenu MuveletekSorokkal;
    private javax.swing.JMenuItem SFDCall;
    private javax.swing.JMenuItem SFDClekeres;
    private javax.swing.JMenu SFDCmuveletek;
    public javax.swing.JMenuItem Szinezo;
    private javax.swing.JMenuItem Termekleker;
    private javax.swing.JMenuItem ahkezel;
    private javax.swing.JMenuItem allasidofelv;
    private javax.swing.JMenuItem allkezel;
    private javax.swing.JMenuItem anyaghianyfelv;
    public javax.swing.JButton jButton10;
    public javax.swing.JButton jButton11;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    public javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JCheckBox jCheckBox2;
    public javax.swing.JCheckBox jCheckBox3;
    public javax.swing.JCheckBox jCheckBox4;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    public javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem kereses;
    public static javax.swing.JMenuItem pnkarbantarto;
    // End of variables declaration//GEN-END:variables
}
