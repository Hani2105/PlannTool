/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PlannTool.CTB_CALC;

import PlannTool.BACKEND.Tc_Betervezo;
import PlannTool.BACKEND.Tc_Cellavalaszto;
import PlannTool.ablak;
import PlannTool.infobox;
import PlannTool.CONNECTS.planconnect;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author gabor_hanacsek
 */
public class CTB_Bejel extends javax.swing.JFrame {

    /**
     * Creates new form Tc_Bejelentkezes
     *
     *
     */
    public CTB_Bejel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Felhasználó név:");

        jLabel2.setText("Jelszó:");

        jButton1.setText("Bejelentkezés");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (IOException ex) {
                    Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Kérlek jelentkezz be! Universal login!");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                try {
                    jPasswordField1KeyPressed(evt);
                } catch (IOException ex) {
                    Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            bejel();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) throws IOException {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                bejel();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:

        this.setVisible(false);

    }//GEN-LAST:event_formWindowClosing

    public void bejel() throws ClassNotFoundException, IOException {

//csak ha valami van írva a felh nevhez es jelszohoz
        if (jTextField1.getText().length() > 0 && jPasswordField1.getText().length() > 0) {

            // TODO add your handling code here:
            planconnect pc = new planconnect();
            char[] password = jPasswordField1.getPassword();
            String pass = "";

            try {
                pass = String.valueOf(password);
                //pass = pass.replace("+", "%2B");
            } catch (Exception e) {

            }

            //proba universal login
            URL oracle = null;
            try {
                oracle = new URL("http://143.116.140.120/api/auth/authlib.php?username=" + jTextField1.getText() + "&password=" + URLEncoder.encode(pass, "UTF-8") + "");
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

            BufferedReader in = null;
            try {
                in = new BufferedReader(
                        new InputStreamReader(oracle.openStream()));
            } catch (IOException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

            String inputLine = "";
            String truee = "";
            try {
                while ((inputLine = in.readLine()) != null) {

                    truee = inputLine;
                }
            } catch (IOException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

            //eredeti kód
            String query = "SELECT job_positions_id as poz , pass FROM planningdb.perm where perm.email like '%" + jTextField1.getText().replace(".", "_") + "%'";

            ResultSet rs = null;
            try {
                rs = (ResultSet) pc.lekerdez(query);
            } catch (SQLException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                if (rs.next()) {

                    String poz = "";
                    poz = rs.getString(1);
//sikeres bejelentkezes és planner a jogosultság
                    if (truee.equals("true") && (Integer.parseInt(poz) == 1 || Integer.parseInt(poz) == 2 || Integer.parseInt(poz) == 4)) {

                        
                        CTB c = new CTB(this);
                        c.jLabel1.setText(this.jTextField1.getText());
                        CTB.user = this.jTextField1.getText();
                        c.setVisible(true);
                        this.dispose();
//ha jó a login de nem planner jogosultsági szint hanem művez
                    } else if (truee.equals("true") && (Integer.parseInt(poz) == 6 || Integer.parseInt(poz) == 7 || Integer.parseInt(poz) == 8)) {

                        infobox info = new infobox();
                        info.infoBox("Nincs jogosultságod ide!", "Hiba!");

                    } //ha jo az universal login de nem planner es nem muvez              
                    else if (truee.equals("true")) {

                        infobox info = new infobox();
                        info.infoBox("Nincs jogosultságod ide!", "Hiba!");

                    } //ha nem jo az universal login
                    else if (!truee.equals("true")) {

                        infobox info = new infobox();
                        info.infoBox("Hibás adatok a bejelentkezésnél!", "Hiba!");

                    }

                } else if (truee.equals("true")) {

                    infobox info = new infobox();
                    info.infoBox("Nincs jogosultságod ide!", "Hiba!");

                } else if (!truee.equals("true")) {

                    infobox info = new infobox();
                    info.infoBox("Hibás adatok a bejelentkezésnél!", "Hiba!");

                }

            } catch (SQLException ex) {
                Logger.getLogger(CTB_Bejel.class.getName()).log(Level.SEVERE, null, ex);
            }

            pc.kinyir();

        } else {

            infobox info = new infobox();
            info.infoBox("Nem adtál meg Felhasználót / Jelszót!", "Hiba!");

        }

    }

    public void userdata() {

        planconnect pc = new planconnect();
        String query = "select tc_users.fs , tc_users.fstyle , tc_users.nezet , tc_users.slides , tc_users.osz  from tc_users where tc_users.username = '" + ablak.user + "'";
        //System.out.println(query);

        try {
            pc.lekerdez(query);

            while (pc.rs.next()) {

                Tc_Betervezo.fs = pc.rs.getString(1);
                Tc_Betervezo.fstyle = pc.rs.getString(2);
                Tc_Betervezo.nezet = Integer.parseInt(pc.rs.getString(3));
                String szamok = pc.rs.getString(4);
                String[] szamtomb = szamok.split(",");
                String oszlopszelesseg = pc.rs.getString(5);
                String[] oszlopszelessegtomb = oszlopszelesseg.split(",");
                try {
                    Tc_Betervezo.slide1 = Integer.parseInt(szamtomb[0]);
                    Tc_Betervezo.slide2 = Integer.parseInt(szamtomb[1]);
                    Tc_Betervezo.slide3 = Integer.parseInt(szamtomb[2]);
                    Tc_Betervezo.slide4 = Integer.parseInt(szamtomb[3]);
                    Tc_Betervezo.slide5 = Integer.parseInt(szamtomb[4]);
                    Tc_Betervezo.slide6 = Integer.parseInt(szamtomb[5]);
                    Tc_Betervezo.slide7 = Integer.parseInt(szamtomb[6]);
                    Tc_Betervezo.slide8 = Integer.parseInt(szamtomb[7]);
                    Tc_Betervezo.slide9 = Integer.parseInt(szamtomb[8]);
                    Tc_Betervezo.slider1 = Integer.parseInt(oszlopszelessegtomb[0]);
                    Tc_Betervezo.slider2 = Integer.parseInt(oszlopszelessegtomb[1]);
                    Tc_Betervezo.allitsuke = Integer.parseInt(oszlopszelessegtomb[2]);

                } catch (Exception e) {

                }

                //System.out.println(cellak);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Tc_Cellavalaszto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Tc_Cellavalaszto.class.getName()).log(Level.SEVERE, null, ex);
        }

        Tc_Betervezo.gombenged();

        pc.kinyir();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CTB_Bejel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CTB_Bejel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CTB_Bejel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CTB_Bejel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Tc_Bejelentkezes().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Tc_Bejelentkezes().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPasswordField jPasswordField1;
    public static javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
